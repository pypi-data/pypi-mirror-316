{"version":3,"file":"lib_index_js.18b1eb4410fe4e02142f.js","mappings":"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","sources":["webpack://jupyterlab_kishu/./src/handler.ts","webpack://jupyterlab_kishu/./src/index.ts"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\r\n\r\nimport { ServerConnection } from '@jupyterlab/services';\r\n\r\n/**\r\n * Call the API extension\r\n *\r\n * @param endPoint API REST end point for the extension\r\n * @param init Initial values for the request\r\n * @returns The response body interpreted as JSON\r\n */\r\nexport async function requestAPI<T>(\r\n  endPoint = '',\r\n  init: RequestInit = {}\r\n): Promise<T> {\r\n  // Make request to Jupyter API\r\n  const settings = ServerConnection.makeSettings();\r\n  const requestUrl = URLExt.join(\r\n    settings.baseUrl,\r\n    'kishu', // API Namespace\r\n    endPoint\r\n  );\r\n\r\n  let response: Response;\r\n  try {\r\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\r\n  } catch (error) {\r\n    throw new ServerConnection.NetworkError(error as TypeError);\r\n  }\r\n  const data: string = await response.text();\r\n  if (!response.ok) {\r\n    throw new ServerConnection.ResponseError(response, data);\r\n  }\r\n  if (data.length > 0) {\r\n    try {\r\n      return JSON.parse(data);\r\n    } catch (error) {\r\n      console.log('Not a JSON response body.', response);\r\n    }\r\n  }\r\n  throw new ServerConnection.ResponseError(response, data);\r\n}\r\n","import {\r\n  JupyterFrontEnd,\r\n  JupyterFrontEndPlugin\r\n} from '@jupyterlab/application';\r\nimport {\r\n  ICommandPalette,\r\n  InputDialog,\r\n  Notification,\r\n} from '@jupyterlab/apputils';\r\nimport {\r\n  INotebookTracker,\r\n} from '@jupyterlab/notebook';\r\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\r\nimport { ITranslator } from '@jupyterlab/translation';\r\n\r\nimport { requestAPI } from './handler';\r\n\r\nconst PLUGIN_ID = 'jupyterlab_kishu:plugin';\r\n\r\nnamespace CommandIDs {\r\n  /**\r\n   * Initialize Kishu on the currently viewed notebook.\r\n   */\r\n  export const init = 'kishu:init';\r\n\r\n  /**\r\n   * Checkout a commit on the currently viewed notebook.\r\n   */\r\n  export const checkout = 'kishu:checkout';\r\n\r\n  /**\r\n   * Create a commit on the currently viewed notebook.\r\n   */\r\n  export const commit = 'kishu:commit';\r\n\r\n  export const undo = 'kishu:undo';\r\n}\r\n\r\nnamespace KishuSetting {\r\n  export let kishu_dir = \"\";\r\n}\r\n\r\ninterface CommitSummary {\r\n  commit_id: string;\r\n  parent_id: string;\r\n  message: string;\r\n  timestamp: string;\r\n  code_block?: string;\r\n  runtime_ms?: number;\r\n}\r\n\r\ninterface HeadBranch {\r\n  branch_name?: string;\r\n  commit_id?: string;\r\n}\r\n\r\ninterface InitResult {\r\n  status: string;\r\n  message: string;\r\n}\r\n\r\ninterface LogAllResult {\r\n  commit_graph: CommitSummary[];\r\n  head: HeadBranch;\r\n}\r\n\r\ninterface CheckoutResult {\r\n  status: string;\r\n  message: string;\r\n}\r\n\r\ninterface UndoResult {\r\n    status: string;\r\n    message: string;\r\n}\r\n\r\ninterface InstrumentResult {\r\n  status: string;\r\n  message?: string;\r\n}\r\n\r\ninterface CommitResult {\r\n  status: string;\r\n  message: string;\r\n  reattachment: InstrumentResult;\r\n}\r\n\r\nfunction notifyWarning(message: string) {\r\n  Notification.warning(message, { autoClose: 3000 });\r\n}\r\n\r\nfunction notifyError(message: string) {\r\n  Notification.error(message, { autoClose: 3000 });\r\n}\r\n\r\nfunction currentNotebookPath(tracker: INotebookTracker): string | undefined {\r\n  const widget = tracker.currentWidget;\r\n  if (!widget) {\r\n    console.log(`Missing tracker widget to detect currently viewed notebook.`);\r\n    return undefined;\r\n  }\r\n  return widget.context.localPath;\r\n}\r\n\r\nfunction commitSummaryToString(commit: CommitSummary): string {\r\n  const date = new Date(commit.timestamp);\r\n  return `[${date.toLocaleString()}]: ${commit.message} (${commit.commit_id})`;\r\n}\r\n\r\nfunction extractHashFromString(inputString: string): string | undefined {\r\n  const regex = /\\(([0-9a-fA-F-]+)\\)$/;\r\n  const match = inputString.match(regex);\r\n  if (match && match[1]) {\r\n    return match[1];\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction loadSetting(setting: ISettingRegistry.ISettings): void {\r\n  // Read the settings and convert to the correct type\r\n  KishuSetting.kishu_dir = setting.get('kishu_dir').composite as string;\r\n  console.log(`Settings: kishu_dir= ${KishuSetting.kishu_dir}`);\r\n}\r\n\r\nfunction installCommands(\r\n  app: JupyterFrontEnd,\r\n  palette: ICommandPalette,\r\n  translator: ITranslator,\r\n  tracker: INotebookTracker,\r\n) {\r\n  const { commands } = app;\r\n  const trans = translator.load('jupyterlab');\r\n\r\n  /**\r\n   * Init\r\n   */\r\n\r\n  commands.addCommand(CommandIDs.init, {\r\n    label: (args) => (\r\n      args.label && args.label == 'short'\r\n        ? trans.__('Initialize/Re-attach')\r\n        : trans.__('Kishu: Initialize/Re-attach...')\r\n    ),\r\n    execute: async (_args) => {\r\n      // Detect currently viewed notebook.\r\n      const notebook_path = currentNotebookPath(tracker);\r\n      if (!notebook_path) {\r\n        notifyError(trans.__(`No currently viewed notebook detected to initialize/attach.`));\r\n        return;\r\n      }\r\n\r\n      // Make init request\r\n      const init_promise = requestAPI<InitResult>('init', {\r\n        method: 'POST',\r\n        body: JSON.stringify({notebook_path: notebook_path}),\r\n      });\r\n\r\n      // Report.\r\n      const notify_manager = Notification.manager;\r\n      const notify_id = notify_manager.notify(\r\n        trans.__(`Initializing Kishu on ${notebook_path}...`),\r\n        'in-progress',\r\n        { autoClose: false },\r\n      );\r\n      init_promise.then((init_result,) => {\r\n        if (init_result.status != \"ok\") {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Kishu init failed.\\n\"${init_result.message}\"`),\r\n            type: 'error',\r\n            autoClose: 3000,\r\n          });\r\n        } else {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Kishu init succeeded!\\n\"${init_result.message}\"`),\r\n            type: 'success',\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n  palette.addItem({\r\n    command: CommandIDs.init,\r\n    category: 'Kishu',\r\n  });\r\n\r\n  /**\r\n   * Checkout\r\n   */\r\n\r\n  commands.addCommand(CommandIDs.checkout, {\r\n    label: (args) => (\r\n      args.label && args.label == 'short'\r\n        ? trans.__('Checkout')\r\n        : trans.__('Kishu: Checkout...')\r\n    ),\r\n    execute: async (_args) => {\r\n      // Detect currently viewed notebook.\r\n      const notebook_path = currentNotebookPath(tracker);\r\n      if (!notebook_path) {\r\n        notifyError(trans.__(`No currently viewed notebook detected to checkout.`));\r\n        return;\r\n      }\r\n\r\n      // List all commits.\r\n      const log_all_result = await requestAPI<LogAllResult>('log_all', {\r\n        method: 'POST',\r\n        body: JSON.stringify({notebook_path: notebook_path, kinds: [\"manual\"]}),\r\n      });\r\n\r\n      // Ask for the target commit ID.\r\n      let maybe_commit_id = undefined;\r\n      if (!log_all_result || log_all_result.commit_graph.length == 0) {\r\n        notifyWarning(trans.__(`No Kishu commit found.`));\r\n      } else {\r\n        // Find the index to current commit.\r\n        let current_idx = log_all_result.commit_graph.findIndex(\r\n          commit => commit.commit_id === log_all_result.head.commit_id\r\n        );\r\n        if (current_idx == -1) {\r\n          current_idx = log_all_result.commit_graph.length - 1;\r\n        }\r\n\r\n        // Show the list and ask to pick one item\r\n        const selected_commit_str = (\r\n          await InputDialog.getItem({\r\n            items: log_all_result.commit_graph.map(commitSummaryToString),\r\n            current: current_idx,\r\n            editable: false,\r\n            title: trans.__('Checkout to...'),\r\n            okLabel: trans.__('Checkout')\r\n          })\r\n        ).value ?? undefined;\r\n        if (selected_commit_str !== undefined) {\r\n          maybe_commit_id = extractHashFromString(selected_commit_str);\r\n        }\r\n      }\r\n      if (!maybe_commit_id) {\r\n        return;\r\n      }\r\n      const commit_id: string = maybe_commit_id;\r\n\r\n      // Make checkout request\r\n      const checkout_promise = requestAPI<CheckoutResult>('checkout', {\r\n        method: 'POST',\r\n        body: JSON.stringify({notebook_path: notebook_path, commit_id: commit_id}),\r\n      });\r\n\r\n      // Reports.\r\n      const notify_manager = Notification.manager;\r\n      const notify_id = notify_manager.notify(\r\n        trans.__(`Checking out ${commit_id}...`),\r\n        'in-progress',\r\n        { autoClose: false },\r\n      );\r\n      checkout_promise.then((checkout_result,) => {\r\n        if (checkout_result.status != \"ok\") {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Kishu checkout failed.\\n\"${checkout_result.message}\"`),\r\n            type: 'error',\r\n            autoClose: 3000,\r\n          });\r\n        } else {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Kishu checkout to ${commit_id} succeeded!`),\r\n            type: 'success',\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n  palette.addItem({\r\n    command: CommandIDs.checkout,\r\n    category: 'Kishu',\r\n  });\r\n\r\n  /**\r\n   * Commit\r\n   */\r\n\r\n  commands.addCommand(CommandIDs.commit, {\r\n    label: (args) => (\r\n      args.label && args.label == 'short'\r\n        ? trans.__('Commit')\r\n        : trans.__('Kishu: Commit...')\r\n    ),\r\n    execute: async (_args) => {\r\n      // Detect currently viewed notebook.\r\n      const notebook_path = currentNotebookPath(tracker);\r\n      if (!notebook_path) {\r\n        notifyError(trans.__(`No currently viewed notebook detected to commit.`));\r\n        return;\r\n      }\r\n\r\n      // Ask for the commit message.\r\n      const message = (\r\n        await InputDialog.getText({\r\n          placeholder: '<commit_message>',\r\n          title: trans.__('Commit message'),\r\n          okLabel: trans.__('Commit')\r\n        })\r\n      ).value ?? undefined;\r\n      if (message == undefined) {\r\n        return;  // Commit canceled\r\n      }\r\n      if (!message) {\r\n        notifyError(trans.__(`Kishu commit requires a commit message.`));\r\n      }\r\n\r\n      // Make checkout request\r\n      const commit_promise = requestAPI<CommitResult>('commit', {\r\n        method: 'POST',\r\n        body: JSON.stringify({notebook_path: notebook_path, message: message}),\r\n      });\r\n\r\n      // Reports.\r\n      const notify_manager = Notification.manager;\r\n      const notify_id = notify_manager.notify(\r\n        trans.__(`Creating a commit...`),\r\n        'in-progress',\r\n        { autoClose: false },\r\n      );\r\n      commit_promise.then((commit_result,) => {\r\n        if (commit_result.status != \"ok\") {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Kishu commit failed.\\n\"${commit_result.message}\"`),\r\n            type: 'error',\r\n            autoClose: 3000,\r\n          });\r\n        } else {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Kishu commit succeeded!`),\r\n            type: 'success',\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n  palette.addItem({\r\n    command: CommandIDs.commit,\r\n    category: 'Kishu',\r\n  });\r\n\r\n  commands.addCommand(CommandIDs.undo, {\r\n    label: (args) => (\r\n      args.label && args.label == 'short'\r\n          ? trans.__('Undo Execution')\r\n          : trans.__('Kishu: Undo Execution...')\r\n    ),\r\n    execute: async (_args) => {\r\n      // Detect currently viewed notebook.\r\n      const notebook_path = currentNotebookPath(tracker);\r\n      if (!notebook_path) {\r\n        notifyError(trans.__(`No currently viewed notebook detected to undo execution.`));\r\n        return;\r\n      }\r\n\r\n      // Make init request\r\n      const undo_promise = requestAPI<UndoResult>('undo', {\r\n        method: 'POST',\r\n        body: JSON.stringify({notebook_path: notebook_path}),\r\n      });\r\n\r\n      // Report.\r\n      const notify_manager = Notification.manager;\r\n      const notify_id = notify_manager.notify(\r\n          trans.__(`Undoing execution for ${notebook_path}...`),\r\n          'in-progress',\r\n          { autoClose: false },\r\n      );\r\n      undo_promise.then((undo_result,) => {\r\n        if (undo_result.status != \"ok\") {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Undo execution failed.\\n\"${undo_result.message}\"`),\r\n            type: 'error',\r\n            autoClose: 3000,\r\n          });\r\n        } else {\r\n          notify_manager.update({\r\n            id: notify_id,\r\n            message: trans.__(`Undo execution succeeded!`),\r\n            type: 'success',\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n    });\r\n  palette.addItem({\r\n    command: CommandIDs.undo,\r\n    category: 'Kishu',\r\n  });\r\n}\r\n\r\n/**\r\n * Initialization data for the jupyterlab_kishu extension.\r\n */\r\nconst plugin: JupyterFrontEndPlugin<void> = {\r\n  id: PLUGIN_ID,\r\n  description: 'Jupyter extension to interact with Kishu',\r\n  autoStart: true,\r\n  requires: [ICommandPalette, ITranslator, ISettingRegistry, INotebookTracker],\r\n  activate: (\r\n    app: JupyterFrontEnd,\r\n    palette: ICommandPalette,\r\n    translator: ITranslator,\r\n    settings: ISettingRegistry,\r\n    tracker: INotebookTracker,\r\n  ) => {\r\n    Promise.all([app.restored, settings.load(PLUGIN_ID)])\r\n      .then(([, setting]) => {\r\n        // Setting registry.\r\n        loadSetting(setting);\r\n        setting.changed.connect(loadSetting);\r\n\r\n        // Install commands.\r\n        installCommands(app, palette, translator, tracker);\r\n      })\r\n      .catch(reason => {\r\n        console.error(\r\n          `Something went wrong when reading the settings.\\n${reason}`\r\n        );\r\n      });\r\n  }\r\n};\r\n\r\nexport default plugin;\r\n"],"names":[],"sourceRoot":""}