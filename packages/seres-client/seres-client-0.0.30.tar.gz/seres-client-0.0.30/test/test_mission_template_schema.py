# coding: utf-8

"""
    Secore API

    API for the Seres core platform

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from seres_client.models.mission_template_schema import MissionTemplateSchema

class TestMissionTemplateSchema(unittest.TestCase):
    """MissionTemplateSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MissionTemplateSchema:
        """Test MissionTemplateSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MissionTemplateSchema`
        """
        model = MissionTemplateSchema()
        if include_optional:
            return MissionTemplateSchema(
                type = 'partial',
                mission_plan_type = 'refuel',
                reference = '',
                waypoints = [
                    seres_client.models.mission_template_waypoint_schema.MissionTemplateWaypointSchema(
                        reference = '', 
                        port_id = 56, 
                        coordinate = seres_client.models.waypoint_coordinate_schema.WaypointCoordinateSchema(
                            longitude = '', 
                            latitude = '', 
                            altitude = '', 
                            elevation = '', ), 
                        mission_template_id = 56, 
                        id = 56, 
                        port_name = '', )
                    ],
                legs = [
                    seres_client.models.mission_template_leg_schema.MissionTemplateLegSchema(
                        meta_order = 56, 
                        critical = True, 
                        average_speed = '', 
                        duration_seconds = 56, 
                        movement_domain_type = 'aerial', 
                        resource_schema_action_schema_ids = [
                            56
                            ], 
                        origin_waypoint_id = 56, 
                        mission_template_id = 56, 
                        id = 56, 
                        destination_waypoint_id = 56, 
                        meta_previous_leg_id = 56, 
                        meta_next_leg_id = 56, 
                        is_launch = True, 
                        is_landing = True, )
                    ],
                revision_of_id = 56,
                variation_of_id = 56,
                id = 56,
                account_id = 56,
                status = 'new'
            )
        else:
            return MissionTemplateSchema(
                type = 'partial',
                reference = '',
                waypoints = [
                    seres_client.models.mission_template_waypoint_schema.MissionTemplateWaypointSchema(
                        reference = '', 
                        port_id = 56, 
                        coordinate = seres_client.models.waypoint_coordinate_schema.WaypointCoordinateSchema(
                            longitude = '', 
                            latitude = '', 
                            altitude = '', 
                            elevation = '', ), 
                        mission_template_id = 56, 
                        id = 56, 
                        port_name = '', )
                    ],
                legs = [
                    seres_client.models.mission_template_leg_schema.MissionTemplateLegSchema(
                        meta_order = 56, 
                        critical = True, 
                        average_speed = '', 
                        duration_seconds = 56, 
                        movement_domain_type = 'aerial', 
                        resource_schema_action_schema_ids = [
                            56
                            ], 
                        origin_waypoint_id = 56, 
                        mission_template_id = 56, 
                        id = 56, 
                        destination_waypoint_id = 56, 
                        meta_previous_leg_id = 56, 
                        meta_next_leg_id = 56, 
                        is_launch = True, 
                        is_landing = True, )
                    ],
                id = 56,
                account_id = 56,
                status = 'new',
        )
        """

    def testMissionTemplateSchema(self):
        """Test MissionTemplateSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
