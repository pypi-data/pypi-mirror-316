# coding: utf-8

"""
    Secore API

    API for the Seres core platform

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from seres_client.models.resource_assembly_schema_component_schema import ResourceAssemblySchemaComponentSchema

class TestResourceAssemblySchemaComponentSchema(unittest.TestCase):
    """ResourceAssemblySchemaComponentSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourceAssemblySchemaComponentSchema:
        """Test ResourceAssemblySchemaComponentSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourceAssemblySchemaComponentSchema`
        """
        model = ResourceAssemblySchemaComponentSchema()
        if include_optional:
            return ResourceAssemblySchemaComponentSchema(
                resource_assembly_schema_id = 56,
                parent_resource_assembly_schema_component_id = 56,
                resource_schema_id = 56,
                configuration = 'primary',
                position_reference = '',
                is_main = True,
                id = 56,
                meta_energy_bank_consumer_link_needs_defining = True,
                meta_energy_bank_component_link_could_need_defining = True,
                resource_schema_type = 'payload'
            )
        else:
            return ResourceAssemblySchemaComponentSchema(
                resource_assembly_schema_id = 56,
                resource_schema_id = 56,
                configuration = 'primary',
                is_main = True,
                id = 56,
                meta_energy_bank_consumer_link_needs_defining = True,
                meta_energy_bank_component_link_could_need_defining = True,
                resource_schema_type = 'payload',
        )
        """

    def testResourceAssemblySchemaComponentSchema(self):
        """Test ResourceAssemblySchemaComponentSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
