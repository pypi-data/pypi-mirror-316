# coding: utf-8

"""
    Secore API

    API for the Seres core platform

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from seres_client.models.resource_schema_schema import ResourceSchemaSchema

class TestResourceSchemaSchema(unittest.TestCase):
    """ResourceSchemaSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourceSchemaSchema:
        """Test ResourceSchemaSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourceSchemaSchema`
        """
        model = ResourceSchemaSchema()
        if include_optional:
            return ResourceSchemaSchema(
                model = '',
                resource_type = 'payload',
                id = 56,
                created = '',
                status = 'new',
                decommission_datetime = None,
                actions = [
                    seres_client.models.resource_schema_action_schema.ResourceSchemaActionSchema(
                        resource_schema_id = 56, 
                        resource_schema_action_schema_id = 56, 
                        consumption_rate = 56, 
                        duration = 56, 
                        id = 56, 
                        name = '', )
                    ],
                has_preview = True,
                energy_profile = seres_client.models.resource_schema_energy_profile_schema.ResourceSchemaEnergyProfileSchema(
                    resource_schema_id = 56, 
                    milliamp_hour_capacity = 56, 
                    charge_max_cycles = 56, 
                    id = 56, )
            )
        else:
            return ResourceSchemaSchema(
                model = '',
                resource_type = 'payload',
                id = 56,
                created = '',
                status = 'new',
                actions = [
                    seres_client.models.resource_schema_action_schema.ResourceSchemaActionSchema(
                        resource_schema_id = 56, 
                        resource_schema_action_schema_id = 56, 
                        consumption_rate = 56, 
                        duration = 56, 
                        id = 56, 
                        name = '', )
                    ],
                has_preview = True,
        )
        """

    def testResourceSchemaSchema(self):
        """Test ResourceSchemaSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
