# coding: utf-8

"""
    Secore API

    API for the Seres core platform

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from seres_client.models.mission_plan_schema import MissionPlanSchema

class TestMissionPlanSchema(unittest.TestCase):
    """MissionPlanSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MissionPlanSchema:
        """Test MissionPlanSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MissionPlanSchema`
        """
        model = MissionPlanSchema()
        if include_optional:
            return MissionPlanSchema(
                reference = '',
                mission_template_id = 56,
                parent_mission_plan_id = 56,
                account_id = 56,
                is_private = True,
                type = 'refuel',
                id = 56,
                future_id = 56,
                created_by_id = 56,
                created = '',
                cancelled = True,
                origin_port_id = 56,
                destination_port_id = 56,
                offgrid_origin = True,
                offgrid_destination = True,
                legs = [
                    seres_client.models.mission_plan_leg_schema.MissionPlanLegSchema(
                        resource_assembly_schema_id = 56, 
                        critical = True, 
                        starting_datetime = '', 
                        is_launch_leg = True, 
                        is_landing_leg = True, 
                        origin_waypoint_id = 56, 
                        mission_plan_id = 56, 
                        generated = True, 
                        id = 56, 
                        future_id = 56, 
                        created = '', 
                        cancelled = True, 
                        created_by_id = 56, 
                        leg_resources = [
                            seres_client.models.mission_plan_leg_resource_schema.MissionPlanLegResourceSchema(
                                resource_id = 56, 
                                resource_assembly_schema_component_id = 56, 
                                configuration = 'primary', 
                                resource_schema_action_ids = [
                                    56
                                    ], 
                                leg_id = 56, 
                                id = 56, 
                                future_id = 56, 
                                created = '', 
                                cancelled = True, 
                                created_by_id = 56, )
                            ], )
                    ],
                waypoints = [
                    seres_client.models.mission_plan_waypoint_schema.MissionPlanWaypointSchema(
                        port_id = 56, 
                        coordinate = seres_client.models.waypoint_coordinate_schema.WaypointCoordinateSchema(
                            longitude = '', 
                            latitude = '', 
                            altitude = '', ), 
                        mission_plan_id = 56, 
                        generated = True, 
                        id = 56, 
                        future_id = 56, 
                        created = '', 
                        cancelled = True, 
                        created_by_id = 56, )
                    ]
            )
        else:
            return MissionPlanSchema(
                reference = '',
                account_id = 56,
                id = 56,
                future_id = 56,
                created_by_id = 56,
                created = '',
                cancelled = True,
                legs = [
                    seres_client.models.mission_plan_leg_schema.MissionPlanLegSchema(
                        resource_assembly_schema_id = 56, 
                        critical = True, 
                        starting_datetime = '', 
                        is_launch_leg = True, 
                        is_landing_leg = True, 
                        origin_waypoint_id = 56, 
                        mission_plan_id = 56, 
                        generated = True, 
                        id = 56, 
                        future_id = 56, 
                        created = '', 
                        cancelled = True, 
                        created_by_id = 56, 
                        leg_resources = [
                            seres_client.models.mission_plan_leg_resource_schema.MissionPlanLegResourceSchema(
                                resource_id = 56, 
                                resource_assembly_schema_component_id = 56, 
                                configuration = 'primary', 
                                resource_schema_action_ids = [
                                    56
                                    ], 
                                leg_id = 56, 
                                id = 56, 
                                future_id = 56, 
                                created = '', 
                                cancelled = True, 
                                created_by_id = 56, )
                            ], )
                    ],
                waypoints = [
                    seres_client.models.mission_plan_waypoint_schema.MissionPlanWaypointSchema(
                        port_id = 56, 
                        coordinate = seres_client.models.waypoint_coordinate_schema.WaypointCoordinateSchema(
                            longitude = '', 
                            latitude = '', 
                            altitude = '', ), 
                        mission_plan_id = 56, 
                        generated = True, 
                        id = 56, 
                        future_id = 56, 
                        created = '', 
                        cancelled = True, 
                        created_by_id = 56, )
                    ],
        )
        """

    def testMissionPlanSchema(self):
        """Test MissionPlanSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
