[tool.poetry]
name = "kegstand"
version = "0.4.0"
description = "The Developer's Toolbelt For Accelerating Mean-Time-To-Party on AWS"
authors = ["JensRoland <mail@jensroland.com>"]
license = "MIT"
repository = "https://github.com/jensroland/kegstand-framework-python"
homepage = "https://kegstand.dev"
#readme = "README.md"
keywords = []

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[tool.poetry.dependencies]
aws-lambda-powertools = {extras = ["aws-sdk"], version = "^2.10.0"}
pyjwt = "^2.1.0"
python = "^3.10"

[tool.poetry.group.dev.dependencies]
mypy = "^1.14.0"
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
ruff = "^0.8.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# Directories that are not visited by pytest collector:
norecursedirs =["dist", "docs", ".tox", ".git", "__pycache__", ".ruff_cache"]
pythonpath = "src/kegstand"

[tool.coverage.report]
#fail_under = 70
show_missing = true
skip_empty = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    '.pytest_cache',
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Slightly longer lines are allowed because it's not 1995 anymore.
line-length = 100

# Use latest supported Python version
target-version = "py313"

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), isort (`I`), pep8-naming (`N`), 
# flake8-bugbear (`B`), flake8-builtins (`A`), flake8-comprehensions (`C4`),
# flake8-pie (`PIE`), flake8-simplify (`SIM`), flake8-unused-arguments (`ARG`), 
# pylint (`PL`), tidy-imports (`TID`), flake8-quotes (`Q`), bandit (`S`)
select = ["E", "F", "I", "N", "B", "A", "C4", "PIE", "SIM", "ARG", "PL", "TID", "Q", "S"]
ignore = [
    "ISC",
    "PLC0414", # Import alias does not rename original package (used by mypy for explicit re-export)
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["kegstand"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Body"]

[tool.ruff.lint.per-file-ignores]
# Tests can use assertions and magic values
"tests/**/*" = ["S101", "PLR2004"]
# Templates can use magic values
"**/*.tmpl" = ["PLR2004"]

[tool.ruff.format]
# Use double quotes for strings.
quote-style = "double"
# Indent with spaces, rather than tabs.
indent-style = "space"
# Respect magic trailing commas.
skip-magic-trailing-comma = false
# Automatically detect the appropriate line ending.
line-ending = "auto"
