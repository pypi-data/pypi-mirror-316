# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

METRIC_ESTIMATE_FWHM_METADATA = Metadata(
    id="93d4c4a8c6da0ee8cc2cc4c3da48da105c37ad7e.boutiques",
    name="metric-estimate-fwhm",
    package="workbench",
    container_image_tag="brainlife/connectome_workbench:1.5.0-freesurfer-update",
)


@dataclasses.dataclass
class MetricEstimateFwhmWholeFile:
    """
    estimate for the whole file at once, not each column separately.
    """
    opt_demean: bool = False
    """subtract the mean image before estimating smoothness"""
    
    def run(
        self,
        execution: Execution,
    ) -> list[str]:
        """
        Build command line arguments. This method is called by the main command.
        
        Args:
            execution: The execution object.
        Returns:
            Command line arguments
        """
        cargs = []
        cargs.append("-whole-file")
        if self.opt_demean:
            cargs.append("-demean")
        return cargs


class MetricEstimateFwhmOutputs(typing.NamedTuple):
    """
    Output object returned when calling `metric_estimate_fwhm(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def metric_estimate_fwhm(
    surface: InputPathType,
    metric_in: InputPathType,
    opt_roi_roi_metric: InputPathType | None = None,
    opt_column_column: str | None = None,
    whole_file: MetricEstimateFwhmWholeFile | None = None,
    runner: Runner | None = None,
) -> MetricEstimateFwhmOutputs:
    """
    Estimate fwhm smoothness of a metric file.
    
    Estimates the smoothness of the metric columns, printing the estimates to
    standard output. These estimates ignore variation in vertex spacing.
    
    Author: Connectome Workbench Developers
    
    URL: https://github.com/Washington-University/workbench
    
    Args:
        surface: the surface to use for distance and neighbor information.
        metric_in: the input metric.
        opt_roi_roi_metric: use only data within an ROI: the metric file to use\
            as an ROI.
        opt_column_column: select a single column to estimate smoothness of:\
            the column number or name.
        whole_file: estimate for the whole file at once, not each column\
            separately.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MetricEstimateFwhmOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(METRIC_ESTIMATE_FWHM_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-metric-estimate-fwhm")
    cargs.append(execution.input_file(surface))
    cargs.append(execution.input_file(metric_in))
    if opt_roi_roi_metric is not None:
        cargs.extend([
            "-roi",
            execution.input_file(opt_roi_roi_metric)
        ])
    if opt_column_column is not None:
        cargs.extend([
            "-column",
            opt_column_column
        ])
    if whole_file is not None:
        cargs.extend(whole_file.run(execution))
    ret = MetricEstimateFwhmOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "METRIC_ESTIMATE_FWHM_METADATA",
    "MetricEstimateFwhmOutputs",
    "MetricEstimateFwhmWholeFile",
    "metric_estimate_fwhm",
]
