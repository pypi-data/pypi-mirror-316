# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

FTOZ_METADATA = Metadata(
    id="c8ceafb840b836488700378bae545b8864c0a58c.boutiques",
    name="ftoz",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


class FtozOutputs(typing.NamedTuple):
    """
    Output object returned when calling `ftoz(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_zscores: OutputPathType | None
    """File containing the converted Z-scores"""


def ftoz(
    input_file: InputPathType,
    dof1: float,
    dof2: float,
    output_file: str | None = "zstats",
    runner: Runner | None = None,
) -> FtozOutputs:
    """
    Convert F-statistics to Z-scores.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        input_file: File containing F-statistics.
        dof1: Degrees of freedom 1 for F-to-Z conversion.
        dof2: Degrees of freedom 2 for F-to-Z conversion.
        output_file: Output file for Z-scores.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `FtozOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(FTOZ_METADATA)
    cargs = []
    cargs.append("ftoz")
    cargs.append(execution.input_file(input_file))
    cargs.append(str(dof1))
    cargs.append(str(dof2))
    if output_file is not None:
        cargs.extend([
            "-zout",
            output_file
        ])
    ret = FtozOutputs(
        root=execution.output_file("."),
        output_zscores=execution.output_file(output_file) if (output_file is not None) else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "FTOZ_METADATA",
    "FtozOutputs",
    "ftoz",
]
