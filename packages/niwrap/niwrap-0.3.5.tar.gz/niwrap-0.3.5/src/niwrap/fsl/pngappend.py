# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

PNGAPPEND_METADATA = Metadata(
    id="99f67fe0688b60f25c052763d14f04c8c451c98b.boutiques",
    name="pngappend",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


class PngappendOutputs(typing.NamedTuple):
    """
    Output object returned when calling `pngappend(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def pngappend(
    input_files_and_options: list[str],
    output_file: InputPathType,
    runner: Runner | None = None,
) -> PngappendOutputs:
    """
    Append PNG files horizontally and/or vertically into a new PNG (or GIF) file.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        input_files_and_options: List of input files and options for appending\
            (e.g., file1.png +3 file2.png -2 file3.png).
        output_file: Output file (e.g., output.png or output.gif).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `PngappendOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(PNGAPPEND_METADATA)
    cargs = []
    cargs.append("pngappend")
    cargs.extend(input_files_and_options)
    cargs.append(execution.input_file(output_file))
    ret = PngappendOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "PNGAPPEND_METADATA",
    "PngappendOutputs",
    "pngappend",
]
