# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

REGISTER_SUBJECT_FLASH_METADATA = Metadata(
    id="9a7a639d778167b266b2e9f5c9a4ba404e0ced41.boutiques",
    name="register_subject_flash",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class RegisterSubjectFlashOutputs(typing.NamedTuple):
    """
    Output object returned when calling `register_subject_flash(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    log_file: OutputPathType
    """Log file output with registration results."""


def register_subject_flash(
    input_volumes: list[InputPathType],
    runner: Runner | None = None,
) -> RegisterSubjectFlashOutputs:
    """
    Register subject using the FLASH forward model to predict intensity values.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_volumes: Input volumes to register.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `RegisterSubjectFlashOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(REGISTER_SUBJECT_FLASH_METADATA)
    cargs = []
    cargs.append("register_subject_flash")
    cargs.extend([execution.input_file(f) for f in input_volumes])
    ret = RegisterSubjectFlashOutputs(
        root=execution.output_file("."),
        log_file=execution.output_file("talairach.log"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "REGISTER_SUBJECT_FLASH_METADATA",
    "RegisterSubjectFlashOutputs",
    "register_subject_flash",
]
