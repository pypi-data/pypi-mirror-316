# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

LONG_CREATE_BASE_SIGMA_METADATA = Metadata(
    id="359af0d6b57993950b3f756ef93dd6df37402a88.boutiques",
    name="long_create_base_sigma",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class LongCreateBaseSigmaOutputs(typing.NamedTuple):
    """
    Output object returned when calling `long_create_base_sigma(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def long_create_base_sigma(
    base_id: str,
    sigma: int,
    runner: Runner | None = None,
) -> LongCreateBaseSigmaOutputs:
    """
    Performs a joint normalization and atlas renormalization at a specific sigma
    smoothing level. This is usually done as part of the base stream but can be
    performed to add files for a different sigma level to an existing base.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        base_id: Subject ID of the base.
        sigma: Integer value of sigma smoothing (usually 2..6).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `LongCreateBaseSigmaOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(LONG_CREATE_BASE_SIGMA_METADATA)
    cargs = []
    cargs.append("long_create_base_sigma")
    cargs.append(base_id)
    cargs.append(str(sigma))
    ret = LongCreateBaseSigmaOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "LONG_CREATE_BASE_SIGMA_METADATA",
    "LongCreateBaseSigmaOutputs",
    "long_create_base_sigma",
]
