# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MAP_ALL_LABELS_LH_METADATA = Metadata(
    id="569f8a45a5f0082dff949fe6bc883e667d21393b.boutiques",
    name="map_all_labels-lh",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MapAllLabelsLhOutputs(typing.NamedTuple):
    """
    Output object returned when calling `map_all_labels_lh(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output file generated after processing."""


def map_all_labels_lh(
    which: str,
    fname: str,
    hemi: str,
    spherical_surf: InputPathType,
    output: str,
    runner: Runner | None = None,
) -> MapAllLabelsLhOutputs:
    """
    Paints output onto a subject's left hemisphere using FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        which: Which type of data to process. Options are: coords, label, vals,\
            curv, area.
        fname: The file name to process.
        hemi: The hemisphere to process (usually 'lh' for left hemisphere).
        spherical_surf: The spherical surface file.
        output: Output file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MapAllLabelsLhOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MAP_ALL_LABELS_LH_METADATA)
    cargs = []
    cargs.extend([
        "-lh",
        "map_all_labels" + which
    ])
    cargs.append(fname)
    cargs.append(hemi)
    cargs.append(execution.input_file(spherical_surf))
    cargs.append("[SUBJECTS...]")
    cargs.append(output)
    ret = MapAllLabelsLhOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(output),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MAP_ALL_LABELS_LH_METADATA",
    "MapAllLabelsLhOutputs",
    "map_all_labels_lh",
]
