# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRIS_INTERPOLATE_WARP_METADATA = Metadata(
    id="4c3b574c8d475695ef29da0c89214dc574282c1e.boutiques",
    name="mris_interpolate_warp",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MrisInterpolateWarpOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mris_interpolate_warp(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mris_interpolate_warp(
    start_surface: InputPathType,
    end_surface: InputPathType,
    warp_field: InputPathType,
    runner: Runner | None = None,
) -> MrisInterpolateWarpOutputs:
    """
    Interpolate warp on cortical surfaces.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        start_surface: The starting surface file.
        end_surface: The ending surface file.
        warp_field: The warp field file with .m3z extension.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisInterpolateWarpOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_INTERPOLATE_WARP_METADATA)
    cargs = []
    cargs.append("mris_interpolate_warp")
    cargs.append(execution.input_file(start_surface))
    cargs.append(execution.input_file(end_surface))
    cargs.append(execution.input_file(warp_field))
    ret = MrisInterpolateWarpOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRIS_INTERPOLATE_WARP_METADATA",
    "MrisInterpolateWarpOutputs",
    "mris_interpolate_warp",
]
