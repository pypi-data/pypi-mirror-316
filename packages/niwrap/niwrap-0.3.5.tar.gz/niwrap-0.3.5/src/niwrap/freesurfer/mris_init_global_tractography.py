# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRIS_INIT_GLOBAL_TRACTOGRAPHY_METADATA = Metadata(
    id="67eb4585ff3c986788ed4212a3618bb647f3bf08.boutiques",
    name="mris_init_global_tractography",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MrisInitGlobalTractographyOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mris_init_global_tractography(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mris_init_global_tractography(
    subject: str,
    parcellation: str,
    output_volume: str,
    runner: Runner | None = None,
) -> MrisInitGlobalTractographyOutputs:
    """
    Initializes global tractography for a given subject and parcellation.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject: The subject on which to perform tractography.
        parcellation: The parcellation to use for tractography.
        output_volume: Output volume of the initialized global tractography.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisInitGlobalTractographyOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_INIT_GLOBAL_TRACTOGRAPHY_METADATA)
    cargs = []
    cargs.append("mris_init_global_tractography")
    cargs.append(subject)
    cargs.append(parcellation)
    cargs.append(output_volume)
    ret = MrisInitGlobalTractographyOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRIS_INIT_GLOBAL_TRACTOGRAPHY_METADATA",
    "MrisInitGlobalTractographyOutputs",
    "mris_init_global_tractography",
]
