# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

DMRI_COLORED_FA_METADATA = Metadata(
    id="9942a5ec79bb71bf37d6af7b5ec7bc808a0b17b5.boutiques",
    name="dmri_coloredFA",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class DmriColoredFaOutputs(typing.NamedTuple):
    """
    Output object returned when calling `dmri_colored_fa(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_colored_fa: OutputPathType
    """The output colored FA image."""


def dmri_colored_fa(
    input_volume: InputPathType,
    output_volume: str = "colored_FA",
    runner: Runner | None = None,
) -> DmriColoredFaOutputs:
    """
    Tool for generating colored FA maps from diffusion MRI data.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_volume: Input diffusion MRI volume.
        output_volume: Output colored FA image.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DmriColoredFaOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(DMRI_COLORED_FA_METADATA)
    cargs = []
    cargs.append("dmri_coloredFA")
    cargs.append(execution.input_file(input_volume))
    cargs.append(output_volume)
    ret = DmriColoredFaOutputs(
        root=execution.output_file("."),
        output_colored_fa=execution.output_file(output_volume + ".nii.gz"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "DMRI_COLORED_FA_METADATA",
    "DmriColoredFaOutputs",
    "dmri_colored_fa",
]
