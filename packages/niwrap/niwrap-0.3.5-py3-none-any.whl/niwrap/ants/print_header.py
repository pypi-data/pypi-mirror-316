# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

PRINT_HEADER_METADATA = Metadata(
    id="514e4dbae6f3b5a425925fca62d2ade89ff0b0c2.boutiques",
    name="PrintHeader",
    package="ants",
    container_image_tag="antsx/ants:v2.5.3",
)


class PrintHeaderOutputs(typing.NamedTuple):
    """
    Output object returned when calling `print_header(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output: OutputPathType
    """The printed header information from the specified image."""


def print_header(
    image: InputPathType,
    what_information: typing.Literal[0, 1, 2, 3, 4] | None = None,
    runner: Runner | None = None,
) -> PrintHeaderOutputs:
    """
    A utility to print header information from an image file.
    
    Author: ANTs Developers
    
    URL: https://github.com/ANTsX/ANTs
    
    Args:
        image: The image file to extract header information from. Supported\
            extension: .ext.
        what_information: Specify the type of information to print: 0 for\
            origin, 1 for spacing, 2 for size, 3 for index, 4 for direction.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `PrintHeaderOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(PRINT_HEADER_METADATA)
    cargs = []
    cargs.append("PrintHeader")
    cargs.append(execution.input_file(image))
    if what_information is not None:
        cargs.append(str(what_information))
    ret = PrintHeaderOutputs(
        root=execution.output_file("."),
        output=execution.output_file("header_info.txt"),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "PRINT_HEADER_METADATA",
    "PrintHeaderOutputs",
    "print_header",
]
