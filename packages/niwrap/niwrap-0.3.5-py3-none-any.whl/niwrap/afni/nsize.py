# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

NSIZE_METADATA = Metadata(
    id="d61eb0714ab51aec00c025a2f54aab55318f6b55.boutiques",
    name="nsize",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class NsizeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `nsize(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    image_out_file: OutputPathType
    """Zero padded output image file"""


def nsize(
    image_in: InputPathType,
    image_out: str,
    runner: Runner | None = None,
) -> NsizeOutputs:
    """
    Zero pads an input image to the nearest larger NxN dimensions.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        image_in: Input image file.
        image_out: Output padded image file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `NsizeOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(NSIZE_METADATA)
    cargs = []
    cargs.append("nsize")
    cargs.append(execution.input_file(image_in))
    cargs.append(image_out)
    ret = NsizeOutputs(
        root=execution.output_file("."),
        image_out_file=execution.output_file(image_out),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "NSIZE_METADATA",
    "NsizeOutputs",
    "nsize",
]
