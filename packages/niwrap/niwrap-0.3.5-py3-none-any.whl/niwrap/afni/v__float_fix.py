# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

V__FLOAT_FIX_METADATA = Metadata(
    id="69c8566d3c52dcfb93a135adaaa38398077c4bc6.boutiques",
    name="@float_fix",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class VFloatFixOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v__float_fix(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def v__float_fix(
    input_files: list[InputPathType],
    runner: Runner | None = None,
) -> VFloatFixOutputs:
    """
    Check whether the input files have any IEEE floating point numbers for illegal
    values: infinities and not-a-number (NaN) values.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        input_files: Input files to be checked for illegal IEEE floating point\
            values. Wildcards can be used, but filenames must end with .HEAD.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `VFloatFixOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V__FLOAT_FIX_METADATA)
    cargs = []
    cargs.append("@float_fix")
    cargs.extend([execution.input_file(f) for f in input_files])
    ret = VFloatFixOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "VFloatFixOutputs",
    "V__FLOAT_FIX_METADATA",
    "v__float_fix",
]
