# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

V_1DGRAYPLOT_METADATA = Metadata(
    id="9f1dfb91ea2888caae64e3a7a65f59bb59e4f314.boutiques",
    name="1dgrayplot",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class V1dgrayplotOutputs(typing.NamedTuple):
    """
    Output object returned when calling `v_1dgrayplot(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def v_1dgrayplot(
    tsfile: InputPathType,
    install: bool = False,
    ignore: float | None = None,
    flip: bool = False,
    sep: bool = False,
    use: float | None = None,
    ps: bool = False,
    runner: Runner | None = None,
) -> V1dgrayplotOutputs:
    """
    Graphs the columns of a *.1D type time series file to the screen in grayscale.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        tsfile: Input time series file (*.1D format).
        install: Install a new X11 colormap (for X11 PseudoColor).
        ignore: Skip first 'nn' rows in the input file [default = 0].
        flip: Plot x and y axes interchanged [default: data columns plotted\
            DOWN the screen].
        sep: Separate scales for each column.
        use: Plot 'mm' points [default: all of them].
        ps: Don't draw plot in a window; write it to stdout in PostScript\
            format.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `V1dgrayplotOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(V_1DGRAYPLOT_METADATA)
    cargs = []
    cargs.append("1dgrayplot")
    cargs.append(execution.input_file(tsfile))
    if install:
        cargs.append("-install")
    if ignore is not None:
        cargs.extend([
            "-ignore",
            str(ignore)
        ])
    if flip:
        cargs.append("-flip")
    if sep:
        cargs.append("-sep")
    if use is not None:
        cargs.extend([
            "-use",
            str(use)
        ])
    if ps:
        cargs.append("-ps")
    ret = V1dgrayplotOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "V1dgrayplotOutputs",
    "V_1DGRAYPLOT_METADATA",
    "v_1dgrayplot",
]
