# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

TFIM_METADATA = Metadata(
    id="e112b845a4c25dd82a06881f7a7a51dae6274c19.boutiques",
    name="tfim",
    package="afni",
    container_image_tag="afni/afni_make_build:AFNI_24.2.06",
)


class TfimOutputs(typing.NamedTuple):
    """
    Output object returned when calling `tfim(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    diff_output: OutputPathType | None
    """Difference image output. Default prefix is 'tfim'."""
    tspm_output: OutputPathType | None
    """T-statistic of difference. Default prefix is 'tfim'."""
    corr_output: OutputPathType | None
    """Equivalent correlation statistic output. Written if -eqcorr is used."""


def tfim(
    set1_images: list[InputPathType],
    set2_images: list[InputPathType],
    prefix: str | None = None,
    pthresh: float | None = None,
    eqcorr: float | None = None,
    paired: bool = False,
    base1_value: float | None = None,
    runner: Runner | None = None,
) -> TfimOutputs:
    """
    MCW TFIM: t-tests on sets of functional images.
    
    Author: AFNI Developers
    
    URL: https://afni.nimh.nih.gov/
    
    Args:
        set1_images: First set of image files.
        set2_images: Second set of image files.
        prefix: Prefix for output filenames. Default is 'tfim'.
        pthresh: Significance level (per voxel) to threshold the output with.\
            Voxels with t-statistic less significant than this will have their diff\
            output zeroed. Default is no threshold.
        eqcorr: Write out the equivalent correlation statistic. The number\
            'dval' is the value to use for 'dof'. Default is not to write this\
            file.
        paired: Compare -set1 and -set2 using a paired sample t-test. Illegal\
            with the -base1 option.
        base1_value: Base value for the first set of images. Used for Usage 2.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `TfimOutputs`).
    """
    if pthresh is not None and not (0 <= pthresh <= 1): 
        raise ValueError(f"'pthresh' must be between 0 <= x <= 1 but was {pthresh}")
    runner = runner or get_global_runner()
    execution = runner.start_execution(TFIM_METADATA)
    cargs = []
    cargs.append("tfim")
    if prefix is not None:
        cargs.extend([
            "-prefix",
            prefix
        ])
    if pthresh is not None:
        cargs.extend([
            "-pthresh",
            str(pthresh)
        ])
    if eqcorr is not None:
        cargs.extend([
            "-eqcorr",
            str(eqcorr)
        ])
    if paired:
        cargs.append("-paired")
    cargs.extend([
        "-set1",
        *[execution.input_file(f) for f in set1_images]
    ])
    cargs.extend([
        "-set2",
        *[execution.input_file(f) for f in set2_images]
    ])
    if base1_value is not None:
        cargs.extend([
            "-base1",
            str(base1_value)
        ])
    ret = TfimOutputs(
        root=execution.output_file("."),
        diff_output=execution.output_file(prefix + ".diff") if (prefix is not None) else None,
        tspm_output=execution.output_file(prefix + ".tspm") if (prefix is not None) else None,
        corr_output=execution.output_file(prefix + ".corr") if (prefix is not None) else None,
    )
    execution.run(cargs)
    return ret


__all__ = [
    "TFIM_METADATA",
    "TfimOutputs",
    "tfim",
]
