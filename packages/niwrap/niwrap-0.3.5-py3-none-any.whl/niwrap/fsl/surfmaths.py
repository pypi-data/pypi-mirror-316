# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

SURFMATHS_METADATA = Metadata(
    id="0c06587bdc6b2f6011719cc92c36318d59f130d9.boutiques",
    name="surfmaths",
    package="fsl",
    container_image_tag="brainlife/fsl:6.0.4-patched2",
)


class SurfmathsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `surfmaths(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output surface file generated by the tool."""


def surfmaths(
    first_input: InputPathType,
    output: str,
    operations_inputs: list[str] | None = None,
    runner: Runner | None = None,
) -> SurfmathsOutputs:
    """
    A command-line tool for performing various mathematical operations on surface
    files.
    
    Author: FMRIB Analysis Group, University of Oxford
    
    URL: https://fsl.fmrib.ox.ac.uk/fsl/fslwiki
    
    Args:
        first_input: First input surface file.
        output: Output surface file.
        operations_inputs: Mathematical operations and additional inputs.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SurfmathsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(SURFMATHS_METADATA)
    cargs = []
    cargs.append("surfmaths")
    cargs.append(execution.input_file(first_input))
    if operations_inputs is not None:
        cargs.extend(operations_inputs)
    cargs.append(output)
    ret = SurfmathsOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(output),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "SURFMATHS_METADATA",
    "SurfmathsOutputs",
    "surfmaths",
]
