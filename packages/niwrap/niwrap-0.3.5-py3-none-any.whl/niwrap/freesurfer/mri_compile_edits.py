# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRI_COMPILE_EDITS_METADATA = Metadata(
    id="2f294d33e927de222c7f1e4b43430f1f824c2840.boutiques",
    name="mri_compile_edits",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MriCompileEditsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mri_compile_edits(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    compiled_edit_volume: OutputPathType
    """Compiled volume showing all the edits"""


def mri_compile_edits(
    subject_name: str,
    output_volume: str,
    runner: Runner | None = None,
) -> MriCompileEditsOutputs:
    """
    Program to create a single volume showing all the volumetric edits made to a
    subject.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_name: Subject name whose edits are to be compiled into a volume.
        output_volume: Output volume file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriCompileEditsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_COMPILE_EDITS_METADATA)
    cargs = []
    cargs.append("mri_compile_edits")
    cargs.append(subject_name)
    cargs.append(output_volume)
    ret = MriCompileEditsOutputs(
        root=execution.output_file("."),
        compiled_edit_volume=execution.output_file(output_volume),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRI_COMPILE_EDITS_METADATA",
    "MriCompileEditsOutputs",
    "mri_compile_edits",
]
