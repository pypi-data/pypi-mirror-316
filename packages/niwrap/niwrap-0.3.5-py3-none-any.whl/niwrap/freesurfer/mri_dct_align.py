# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRI_DCT_ALIGN_METADATA = Metadata(
    id="b7dec03c65e4f45076247b5423830965c663feaa.boutiques",
    name="mri_dct_align",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MriDctAlignOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mri_dct_align(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_xform_file: OutputPathType
    """Transformation file resulting from the alignment"""


def mri_dct_align(
    source: InputPathType,
    destination: InputPathType,
    output_xform: str,
    runner: Runner | None = None,
) -> MriDctAlignOutputs:
    """
    MRI DCT alignment tool from FreeSurfer.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        source: Source image file.
        destination: Destination image file.
        output_xform: Output transformation file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriDctAlignOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_DCT_ALIGN_METADATA)
    cargs = []
    cargs.append("mri_dct_align")
    cargs.append(execution.input_file(source))
    cargs.append(execution.input_file(destination))
    cargs.append(output_xform)
    ret = MriDctAlignOutputs(
        root=execution.output_file("."),
        output_xform_file=execution.output_file(output_xform),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRI_DCT_ALIGN_METADATA",
    "MriDctAlignOutputs",
    "mri_dct_align",
]
