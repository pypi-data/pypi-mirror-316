# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRI_COPY_VALUES_METADATA = Metadata(
    id="cc7c40825cfb55a4e617070c14c0897527683ac8.boutiques",
    name="mri_copy_values",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MriCopyValuesOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mri_copy_values(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    output_file: OutputPathType
    """Output volume with copied values from source."""


def mri_copy_values(
    source_volume: InputPathType,
    target_volume: InputPathType,
    output_volume: str,
    runner: Runner | None = None,
) -> MriCopyValuesOutputs:
    """
    No description.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        source_volume: Source volume from which values are copied.
        target_volume: Target volume to which values are copied.
        output_volume: Output volume where the result will be stored.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MriCopyValuesOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRI_COPY_VALUES_METADATA)
    cargs = []
    cargs.append("mri_copy_values")
    cargs.append(execution.input_file(source_volume))
    cargs.append(execution.input_file(target_volume))
    cargs.append(output_volume)
    ret = MriCopyValuesOutputs(
        root=execution.output_file("."),
        output_file=execution.output_file(output_volume),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRI_COPY_VALUES_METADATA",
    "MriCopyValuesOutputs",
    "mri_copy_values",
]
