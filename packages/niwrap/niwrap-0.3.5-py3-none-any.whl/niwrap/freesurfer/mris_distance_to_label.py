# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

MRIS_DISTANCE_TO_LABEL_METADATA = Metadata(
    id="0538a932ce0052cc0bb4e77e20e1d20d65106c51.boutiques",
    name="mris_distance_to_label",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class MrisDistanceToLabelOutputs(typing.NamedTuple):
    """
    Output object returned when calling `mris_distance_to_label(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def mris_distance_to_label(
    hemisphere: str,
    subject_1: str,
    runner: Runner | None = None,
) -> MrisDistanceToLabelOutputs:
    """
    A tool for measuring the distance between vertices on a surface and a labeled
    region.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        hemisphere: Hemisphere to process (e.g., 'lh' for left hemisphere or\
            'rh' for right hemisphere).
        subject_1: Subject identifier or path to the subject directory.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `MrisDistanceToLabelOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(MRIS_DISTANCE_TO_LABEL_METADATA)
    cargs = []
    cargs.append("mris_distance_to_label")
    cargs.append(hemisphere)
    cargs.append(subject_1)
    ret = MrisDistanceToLabelOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "MRIS_DISTANCE_TO_LABEL_METADATA",
    "MrisDistanceToLabelOutputs",
    "mris_distance_to_label",
]
