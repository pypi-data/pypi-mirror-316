# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

DMRI_NEIGHBORING_REGIONS_METADATA = Metadata(
    id="0178eb527b86ea0845721b0e3a911c76330df23a.boutiques",
    name="dmri_neighboringRegions",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class DmriNeighboringRegionsOutputs(typing.NamedTuple):
    """
    Output object returned when calling `dmri_neighboring_regions(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""
    result_file: OutputPathType
    """Resulting output file from dmri_neighboringRegions"""


def dmri_neighboring_regions(
    input_file: InputPathType,
    output_file: str,
    runner: Runner | None = None,
) -> DmriNeighboringRegionsOutputs:
    """
    A tool for diffusion MRI analysis involving neighboring regions.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        input_file: Input image file (e.g. img.nii.gz).
        output_file: Output result file (e.g. result.nii.gz).
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `DmriNeighboringRegionsOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(DMRI_NEIGHBORING_REGIONS_METADATA)
    cargs = []
    cargs.append("dmri_neighboringRegions")
    cargs.append(execution.input_file(input_file))
    cargs.append(output_file)
    ret = DmriNeighboringRegionsOutputs(
        root=execution.output_file("."),
        result_file=execution.output_file(output_file),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "DMRI_NEIGHBORING_REGIONS_METADATA",
    "DmriNeighboringRegionsOutputs",
    "dmri_neighboring_regions",
]
