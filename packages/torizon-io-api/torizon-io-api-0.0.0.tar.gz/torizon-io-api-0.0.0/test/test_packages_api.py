# coding: utf-8

"""
    Torizon OTA

     This API is rate limited and will return the following headers for each API call.    - X-RateLimit-Limit - The total number of requests allowed within a time period   - X-RateLimit-Remaining - The total number of requests still allowed until the end of the rate limiting period   - X-RateLimit-Reset - The number of seconds until the limit is fully reset  In addition, if an API client is rate limited, it will receive a HTTP 420 response with the following header:     - Retry-After - The number of seconds to wait until this request is allowed  

    The version of the OpenAPI document: 2.0-Beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from torizon_io_api.api.packages_api import PackagesApi


class TestPackagesApi(unittest.TestCase):
    """PackagesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PackagesApi()

    def tearDown(self) -> None:
        pass

    def test_delete_packages_packageid(self) -> None:
        """Test case for delete_packages_packageid

        Delete a package
        """
        pass

    def test_get_packages(self) -> None:
        """Test case for get_packages

        Retrieve metadata about packages in your repository
        """
        pass

    def test_get_packages_external(self) -> None:
        """Test case for get_packages_external

        Retrieve metadata about packages in your repository from other sources
        """
        pass

    def test_get_packages_external_info(self) -> None:
        """Test case for get_packages_external_info

        Fetch information about external package sources
        """
        pass

    def test_get_packages_external_refresh_source_file_name(self) -> None:
        """Test case for get_packages_external_refresh_source_file_name

        Refresh metadata from an external package source
        """
        pass

    def test_patch_packages_packageid(self) -> None:
        """Test case for patch_packages_packageid

        Edit metadata about a package
        """
        pass

    def test_post_packages(self) -> None:
        """Test case for post_packages

        Upload a new package
        """
        pass


if __name__ == '__main__':
    unittest.main()
