# coding: utf-8

"""
    Torizon OTA

     This API is rate limited and will return the following headers for each API call.    - X-RateLimit-Limit - The total number of requests allowed within a time period   - X-RateLimit-Remaining - The total number of requests still allowed until the end of the rate limiting period   - X-RateLimit-Reset - The number of seconds until the limit is fully reset  In addition, if an API client is rate limited, it will receive a HTTP 420 response with the following header:     - Retry-After - The number of seconds to wait until this request is allowed  

    The version of the OpenAPI document: 2.0-Beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from torizon_io_api.api.fleets_api import FleetsApi


class TestFleetsApi(unittest.TestCase):
    """FleetsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = FleetsApi()

    def tearDown(self) -> None:
        pass

    def test_delete_fleets_fleetid(self) -> None:
        """Test case for delete_fleets_fleetid

        Delete a fleet
        """
        pass

    def test_delete_fleets_fleetid_devices(self) -> None:
        """Test case for delete_fleets_fleetid_devices

        Remove devices from a fleet
        """
        pass

    def test_get_fleets(self) -> None:
        """Test case for get_fleets

        Get information about all fleets in your repository
        """
        pass

    def test_get_fleets_fleetid(self) -> None:
        """Test case for get_fleets_fleetid

        Get information about a single fleet in your repository
        """
        pass

    def test_get_fleets_fleetid_devices(self) -> None:
        """Test case for get_fleets_fleetid_devices

        Get information about the devices in a single fleet
        """
        pass

    def test_post_fleets(self) -> None:
        """Test case for post_fleets

        Create a new fleet
        """
        pass

    def test_post_fleets_fleetid_devices(self) -> None:
        """Test case for post_fleets_fleetid_devices

        Add devices to a fleet
        """
        pass

    def test_put_fleets_fleetid(self) -> None:
        """Test case for put_fleets_fleetid

        Update fleet
        """
        pass


if __name__ == '__main__':
    unittest.main()
