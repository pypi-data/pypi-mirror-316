# coding: utf-8

"""
    Torizon OTA

     This API is rate limited and will return the following headers for each API call.    - X-RateLimit-Limit - The total number of requests allowed within a time period   - X-RateLimit-Remaining - The total number of requests still allowed until the end of the rate limiting period   - X-RateLimit-Reset - The number of seconds until the limit is fully reset  In addition, if an API client is rate limited, it will receive a HTTP 420 response with the following header:     - Retry-After - The number of seconds to wait until this request is allowed  

    The version of the OpenAPI document: 2.0-Beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from torizon_io_api.api.updates_api import UpdatesApi


class TestUpdatesApi(unittest.TestCase):
    """UpdatesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UpdatesApi()

    def tearDown(self) -> None:
        pass

    def test_delete_lockboxes_lockbox_name(self) -> None:
        """Test case for delete_lockboxes_lockbox_name

        Delete a lockbox
        """
        pass

    def test_get_lockbox_details(self) -> None:
        """Test case for get_lockbox_details

        List all existing lockboxes on the repository, and their detailed contents
        """
        pass

    def test_get_lockboxes(self) -> None:
        """Test case for get_lockboxes

        List all existing lockboxes on the repository
        """
        pass

    def test_get_lockboxes_lockbox_name(self) -> None:
        """Test case for get_lockboxes_lockbox_name

        Get the raw Uptane metadata for a lockbox
        """
        pass

    def test_patch_updates(self) -> None:
        """Test case for patch_updates

        Cancel a pending update for one or more devices
        """
        pass

    def test_post_lockboxes_lockbox_name(self) -> None:
        """Test case for post_lockboxes_lockbox_name

        Define a new lockbox, or update an existing one
        """
        pass

    def test_post_updates(self) -> None:
        """Test case for post_updates

        Launch an update to one or more devices or fleets
        """
        pass


if __name__ == '__main__':
    unittest.main()
