# coding: utf-8

"""
    Torizon OTA

     This API is rate limited and will return the following headers for each API call.    - X-RateLimit-Limit - The total number of requests allowed within a time period   - X-RateLimit-Remaining - The total number of requests still allowed until the end of the rate limiting period   - X-RateLimit-Reset - The number of seconds until the limit is fully reset  In addition, if an API client is rate limited, it will receive a HTTP 420 response with the following header:     - Retry-After - The number of seconds to wait until this request is allowed  

    The version of the OpenAPI document: 2.0-Beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from torizon_io_api.api.devices_api import DevicesApi


class TestDevicesApi(unittest.TestCase):
    """DevicesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DevicesApi()

    def tearDown(self) -> None:
        pass

    def test_delete_devices_deviceuuid(self) -> None:
        """Test case for delete_devices_deviceuuid

        Delete a single device
        """
        pass

    def test_get_devices(self) -> None:
        """Test case for get_devices

        Query device information
        """
        pass

    def test_get_devices_deviceuuid(self) -> None:
        """Test case for get_devices_deviceuuid

        Get detailed information about a single device
        """
        pass

    def test_get_devices_name_deviceuuid(self) -> None:
        """Test case for get_devices_name_deviceuuid

        Get the display name of a single device
        """
        pass

    def test_get_devices_network(self) -> None:
        """Test case for get_devices_network

        Get network information for many devices
        """
        pass

    def test_get_devices_network_deviceuuid(self) -> None:
        """Test case for get_devices_network_deviceuuid

        Get network information for a single device
        """
        pass

    def test_get_devices_notes_deviceuuid(self) -> None:
        """Test case for get_devices_notes_deviceuuid

        Get the device notes for a specific device
        """
        pass

    def test_get_devices_packages(self) -> None:
        """Test case for get_devices_packages

        Get information about the installed packages for many devices
        """
        pass

    def test_get_devices_packages_deviceuuid(self) -> None:
        """Test case for get_devices_packages_deviceuuid

        Get information about the installed packages for a single device
        """
        pass

    def test_get_devices_token(self) -> None:
        """Test case for get_devices_token

        Retrieve device provisioning token
        """
        pass

    def test_get_devices_uptane_deviceuuid_assignment(self) -> None:
        """Test case for get_devices_uptane_deviceuuid_assignment

        Show detailed information about the currently-assigned update for a single device
        """
        pass

    def test_get_devices_uptane_deviceuuid_components(self) -> None:
        """Test case for get_devices_uptane_deviceuuid_components

        Get a list of the software components reported by a single device
        """
        pass

    def test_post_devices(self) -> None:
        """Test case for post_devices

        Manually create a new device
        """
        pass

    def test_put_devices_hibernation_deviceuuid(self) -> None:
        """Test case for put_devices_hibernation_deviceuuid

        Set the hibernation status of a device
        """
        pass

    def test_put_devices_name_deviceuuid(self) -> None:
        """Test case for put_devices_name_deviceuuid

        Set the display name of a single device
        """
        pass

    def test_put_devices_notes_deviceuuid(self) -> None:
        """Test case for put_devices_notes_deviceuuid

        Set the device notes for a specific device
        """
        pass


if __name__ == '__main__':
    unittest.main()
