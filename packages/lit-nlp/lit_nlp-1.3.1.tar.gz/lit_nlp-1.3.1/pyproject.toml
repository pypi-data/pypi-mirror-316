[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "lit-nlp"
# LINT.IfChange
version = "1.3.1"
# LINT.ThenChange(./lit_nlp/package.json)
authors = [
  { name="Google, LLC", email="lit-dev@google.com" }
]
description = "ðŸ”¥LIT: The Learning Interpretability Tool"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
# LINT.IfChange
dependencies = [
  "absl-py>=1.4.0",
  "annoy>=1.17.3",
  "attrs>=22.1.0",
  "etils[epath]>=1.5.0",
  "filelock>=3.12.3",
  "google-cloud-translate>=3.11.1",
  "ipython>=7.34.0",
  "Levenshtein>=0.21.1",
  "matplotlib>=3.7.1",
  "ml-collections>=0.1.1",
  "numpy>=1.24.1,<2.0.0",
  "pandas[output-formatting]>=2.0.3",
  "Pillow>=10.0.0",
  "portpicker>=1.5.2",
  "requests>=2.31.0",
  "rouge-score>=0.1.2",
  "sacrebleu>=2.3.1",
  "saliency>=0.1.3",
  "scikit-learn>=1.0.2",
  "scipy>=1.10.1",
  "shap>=0.42.0,<0.46.0",
  "six>=1.16.0",
  "termcolor>=2.3.0",
  "tqdm>=4.64.0",
  "werkzeug>=2.2.3",
]
# LINT.ThenChange(./requirements.txt)
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Jupyter",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: JavaScript",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Typing :: Typed",
]
keywords = [
  "interpretability",
  "interpretable artifical intelligence",
  "explainable",
  "explainable artifical intelligence",
  "XAI",
  "computer vision",
  "natural language processing",
  "artifical intelligence",
  "machine learning",
  "deep learning",
  "visualization",
  "visual analytics",
  "tensorflow",
  "tf",
  "torch",
]

[project.optional-dependencies]
# LINT.IfChange
examples-common = [
  "gunicorn>=20.1.0",
  "tensorflow>=2.16.0",
  "transformers>=4.27.1",
]
# LINT.ThenChange(./requirements_examples_common.txt)
# LINT.IfChange
examples-discriminative-ai = [
  "lit-nlp[examples-common]",
  "tensorflow-datasets>=4.9.0",
  "tf-keras>=2.16",
]
# LINT.ThenChange(./requirements_examples_discriminative_ai.txt)
# LINT.IfChange
examples-generative-ai = [
  "lit-nlp[examples-common]",
  "google-cloud-aiplatform>=1.60.0",
  "keras>=3.0.0",
  "keras-nlp>=0.14.0",
  "sentencepiece==0.1.99",
  "tensorflow-text>=2.16.0",
  "torch>=2.0.0",
  "vertexai>=1.49.0",
]
# LINT.ThenChange(./requirements_examples_generative_ai.txt)
umap = [
  "umap-learn==0.5.6"
]
# LINT.IfChange
test = [
  "lit-nlp[examples-discriminative-ai]",
  "lit-nlp[examples-generative-ai]",
  "lit-nlp[umap]",
  "lime==0.2.0.1",
  "pytest>=7.4.0,<8.0.0",
  "webtest>=2.0",
]
# LINT.ThenChange(./requirements_test.txt)

[project.urls]
"Homepage" = "https://github.com/pair-code/lit"
"Repository" = "https://github.com/PAIR-code/lit"
"Bug Tracker" = "https://github.com/PAIR-code/lit/issues"

[tool.setuptools.packages.find]
include = ["lit_nlp*"]
exclude = ["*_test"]

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"
