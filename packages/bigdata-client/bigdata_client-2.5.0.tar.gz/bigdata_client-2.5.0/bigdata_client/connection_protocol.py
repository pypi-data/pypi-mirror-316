from typing import Protocol


class BigdataConnectionProtocol(Protocol):
    """Used to have typing in Watchlist avoiding a circular dependency with BigdataConnection"""

    def get_single_watchlist(self, id_): ...

    def create_watchlist(self, request): ...

    def patch_watchlist(self, id_, request): ...

    def delete_watchlist(self, id_): ...

    def get_all_watchlists(self): ...

    def share_unshare_watchlist(self, id_, request): ...

    def autosuggest(self, items, limit, categories): ...

    def autosuggest_async(self, items, limit): ...

    def by_ids(self, request): ...

    def share_file_with_company(self, file_id): ...

    def unshare_file_with_company(self, file_id): ...

    def download_annotated_dict(self, id_: str) -> dict: ...
