"""
    FreeClimb API

    FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@freeclimb.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest
from datetime import datetime, date
import pytest

import freeclimb

from freeclimb.model.queue_result_status import QueueResultStatus  # noqa: E501

class TestQueueResultStatus(unittest.TestCase):
    """QueueResultStatus unit test stubs"""

    
    def test_QUEUE_FULL_should_serialize_to_enum(self):
        expected = QueueResultStatus.QUEUE_FULL
        calculated = QueueResultStatus['QUEUE_FULL']
        assert expected == calculated

    def test_QUEUE_FULL_should_deserialize_to_string(self):
        test = QueueResultStatus.QUEUE_FULL
        expected = "queueFull"
        calculated = test.value
        assert expected == calculated

    def test_DEQUEUED_should_serialize_to_enum(self):
        expected = QueueResultStatus.DEQUEUED
        calculated = QueueResultStatus['DEQUEUED']
        assert expected == calculated

    def test_DEQUEUED_should_deserialize_to_string(self):
        test = QueueResultStatus.DEQUEUED
        expected = "dequeued"
        calculated = test.value
        assert expected == calculated

    def test_HANGUP_should_serialize_to_enum(self):
        expected = QueueResultStatus.HANGUP
        calculated = QueueResultStatus['HANGUP']
        assert expected == calculated

    def test_HANGUP_should_deserialize_to_string(self):
        test = QueueResultStatus.HANGUP
        expected = "hangup"
        calculated = test.value
        assert expected == calculated

    def test_SYSTEM_ERROR_should_serialize_to_enum(self):
        expected = QueueResultStatus.SYSTEM_ERROR
        calculated = QueueResultStatus['SYSTEM_ERROR']
        assert expected == calculated

    def test_SYSTEM_ERROR_should_deserialize_to_string(self):
        test = QueueResultStatus.SYSTEM_ERROR
        expected = "systemError"
        calculated = test.value
        assert expected == calculated

    
if __name__ == '__main__':
    unittest.main()