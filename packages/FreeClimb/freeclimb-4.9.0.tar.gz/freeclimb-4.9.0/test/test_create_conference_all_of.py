"""
    FreeClimb API

    FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@freeclimb.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest
from datetime import datetime, date
import pytest

import freeclimb
from freeclimb.model.play_beep import PlayBeep
globals()['PlayBeep'] = PlayBeep

from freeclimb.model.create_conference_all_of import CreateConferenceAllOf  # noqa: E501

class TestCreateConferenceAllOf(unittest.TestCase):
    """CreateConferenceAllOf unit test stubs"""

    def setUp(self):
        self.model = CreateConferenceAllOf(
            action_url="",
        )
    
    def test_action_url(self):
        """Test CreateConferenceAllOf.action_url"""
        self.model.action_url = "TEST_STRING"
        assert self.model.get("action_url") == "TEST_STRING"

    def test_alias(self):
        """Test CreateConferenceAllOf.alias"""
        self.model.alias = False
        assert self.model.get("alias") == False

    def test_play_beep(self):
        """Test CreateConferenceAllOf.play_beep"""
        self.model.play_beep = PlayBeep.ALWAYS
        assert self.model.get("play_beep") == PlayBeep.ALWAYS
        self.model.play_beep = PlayBeep.NEVER
        assert self.model.get("play_beep") == PlayBeep.NEVER
        self.model.play_beep = PlayBeep.ENTRY_ONLY
        assert self.model.get("play_beep") == PlayBeep.ENTRY_ONLY
        self.model.play_beep = PlayBeep.EXIT_ONLY
        assert self.model.get("play_beep") == PlayBeep.EXIT_ONLY

    def test_record(self):
        """Test CreateConferenceAllOf.record"""
        self.model.record = False
        assert self.model.get("record") == False

    def test_status_callback_url(self):
        """Test CreateConferenceAllOf.status_callback_url"""
        self.model.status_callback_url = "TEST_STRING"
        assert self.model.get("status_callback_url") == "TEST_STRING"

    def test_wait_url(self):
        """Test CreateConferenceAllOf.wait_url"""
        self.model.wait_url = "TEST_STRING"
        assert self.model.get("wait_url") == "TEST_STRING"


if __name__ == '__main__':
    unittest.main()