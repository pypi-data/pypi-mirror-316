"""
    FreeClimb API

    FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@freeclimb.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest
from datetime import datetime, date
import pytest

import freeclimb

from freeclimb.model.call_direction import CallDirection  # noqa: E501

class TestCallDirection(unittest.TestCase):
    """CallDirection unit test stubs"""

    
    def test_INBOUND_should_serialize_to_enum(self):
        expected = CallDirection.INBOUND
        calculated = CallDirection['INBOUND']
        assert expected == calculated

    def test_INBOUND_should_deserialize_to_string(self):
        test = CallDirection.INBOUND
        expected = "inbound"
        calculated = test.value
        assert expected == calculated

    def test_OUTBOUND_API_should_serialize_to_enum(self):
        expected = CallDirection.OUTBOUND_API
        calculated = CallDirection['OUTBOUND_API']
        assert expected == calculated

    def test_OUTBOUND_API_should_deserialize_to_string(self):
        test = CallDirection.OUTBOUND_API
        expected = "outboundAPI"
        calculated = test.value
        assert expected == calculated

    def test_OUTBOUND_DIAL_should_serialize_to_enum(self):
        expected = CallDirection.OUTBOUND_DIAL
        calculated = CallDirection['OUTBOUND_DIAL']
        assert expected == calculated

    def test_OUTBOUND_DIAL_should_deserialize_to_string(self):
        test = CallDirection.OUTBOUND_DIAL
        expected = "outboundDial"
        calculated = test.value
        assert expected == calculated

    
if __name__ == '__main__':
    unittest.main()