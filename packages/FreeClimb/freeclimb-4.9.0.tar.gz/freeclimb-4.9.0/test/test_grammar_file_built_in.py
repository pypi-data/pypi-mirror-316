"""
    FreeClimb API

    FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@freeclimb.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest
from datetime import datetime, date
import pytest

import freeclimb

from freeclimb.model.grammar_file_built_in import GrammarFileBuiltIn  # noqa: E501

class TestGrammarFileBuiltIn(unittest.TestCase):
    """GrammarFileBuiltIn unit test stubs"""

    
    def test_ALPHNUM6_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.ALPHNUM6
        calculated = GrammarFileBuiltIn['ALPHNUM6']
        assert expected == calculated

    def test_ALPHNUM6_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.ALPHNUM6
        expected = "ALPHNUM6"
        calculated = test.value
        assert expected == calculated

    def test_ANY_DIG_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.ANY_DIG
        calculated = GrammarFileBuiltIn['ANY_DIG']
        assert expected == calculated

    def test_ANY_DIG_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.ANY_DIG
        expected = "ANY_DIG"
        calculated = test.value
        assert expected == calculated

    def test_DIG1_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG1
        calculated = GrammarFileBuiltIn['DIG1']
        assert expected == calculated

    def test_DIG1_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG1
        expected = "DIG1"
        calculated = test.value
        assert expected == calculated

    def test_DIG2_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG2
        calculated = GrammarFileBuiltIn['DIG2']
        assert expected == calculated

    def test_DIG2_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG2
        expected = "DIG2"
        calculated = test.value
        assert expected == calculated

    def test_DIG3_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG3
        calculated = GrammarFileBuiltIn['DIG3']
        assert expected == calculated

    def test_DIG3_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG3
        expected = "DIG3"
        calculated = test.value
        assert expected == calculated

    def test_DIG4_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG4
        calculated = GrammarFileBuiltIn['DIG4']
        assert expected == calculated

    def test_DIG4_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG4
        expected = "DIG4"
        calculated = test.value
        assert expected == calculated

    def test_DIG5_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG5
        calculated = GrammarFileBuiltIn['DIG5']
        assert expected == calculated

    def test_DIG5_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG5
        expected = "DIG5"
        calculated = test.value
        assert expected == calculated

    def test_DIG6_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG6
        calculated = GrammarFileBuiltIn['DIG6']
        assert expected == calculated

    def test_DIG6_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG6
        expected = "DIG6"
        calculated = test.value
        assert expected == calculated

    def test_DIG7_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG7
        calculated = GrammarFileBuiltIn['DIG7']
        assert expected == calculated

    def test_DIG7_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG7
        expected = "DIG7"
        calculated = test.value
        assert expected == calculated

    def test_DIG8_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG8
        calculated = GrammarFileBuiltIn['DIG8']
        assert expected == calculated

    def test_DIG8_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG8
        expected = "DIG8"
        calculated = test.value
        assert expected == calculated

    def test_DIG9_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG9
        calculated = GrammarFileBuiltIn['DIG9']
        assert expected == calculated

    def test_DIG9_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG9
        expected = "DIG9"
        calculated = test.value
        assert expected == calculated

    def test_DIG10_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG10
        calculated = GrammarFileBuiltIn['DIG10']
        assert expected == calculated

    def test_DIG10_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG10
        expected = "DIG10"
        calculated = test.value
        assert expected == calculated

    def test_DIG11_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.DIG11
        calculated = GrammarFileBuiltIn['DIG11']
        assert expected == calculated

    def test_DIG11_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.DIG11
        expected = "DIG11"
        calculated = test.value
        assert expected == calculated

    def test_UP_TO_20_DIGIT_SEQUENCE_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.UP_TO_20_DIGIT_SEQUENCE
        calculated = GrammarFileBuiltIn['UP_TO_20_DIGIT_SEQUENCE']
        assert expected == calculated

    def test_UP_TO_20_DIGIT_SEQUENCE_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.UP_TO_20_DIGIT_SEQUENCE
        expected = "UP_TO_20_DIGIT_SEQUENCE"
        calculated = test.value
        assert expected == calculated

    def test_VERSAY_YESNO_should_serialize_to_enum(self):
        expected = GrammarFileBuiltIn.VERSAY_YESNO
        calculated = GrammarFileBuiltIn['VERSAY_YESNO']
        assert expected == calculated

    def test_VERSAY_YESNO_should_deserialize_to_string(self):
        test = GrammarFileBuiltIn.VERSAY_YESNO
        expected = "VERSAY_YESNO"
        calculated = test.value
        assert expected == calculated

    
if __name__ == '__main__':
    unittest.main()