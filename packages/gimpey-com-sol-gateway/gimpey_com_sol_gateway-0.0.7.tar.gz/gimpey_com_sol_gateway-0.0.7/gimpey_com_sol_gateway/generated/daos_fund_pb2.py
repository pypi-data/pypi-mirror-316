# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: daos_fund.proto
# Protobuf Python Version: 5.28.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    1,
    '',
    'daos_fund.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x64\x61os_fund.proto\x12\tdaos_fund\"\x90\x01\n\nBuyRequest\x12\x16\n\x0esender_address\x18\x01 \x01(\t\x12\x15\n\rtoken_address\x18\x02 \x01(\t\x12\x12\n\namount_sol\x18\x03 \x01(\x01\x12\x10\n\x08slippage\x18\x04 \x01(\x01\x12\x16\n\x0e\x63onfig_address\x18\x05 \x01(\t\x12\x15\n\rcurve_address\x18\x06 \x01(\t\"c\n\x0b\x42uyResponse\x12\x1f\n\x17serialized_instructions\x18\x01 \x03(\t\x12\x1d\n\x15precomputed_fee_units\x18\x02 \x01(\r\x12\x14\n\x0ctoken_amount\x18\x03 \x01(\x04\x32@\n\x08\x44\x61osFund\x12\x34\n\x03\x42uy\x12\x15.daos_fund.BuyRequest\x1a\x16.daos_fund.BuyResponseB\rZ\x0b\x64\x61os_fundpbb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'daos_fund_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\013daos_fundpb'
  _globals['_BUYREQUEST']._serialized_start=31
  _globals['_BUYREQUEST']._serialized_end=175
  _globals['_BUYRESPONSE']._serialized_start=177
  _globals['_BUYRESPONSE']._serialized_end=276
  _globals['_DAOSFUND']._serialized_start=278
  _globals['_DAOSFUND']._serialized_end=342
# @@protoc_insertion_point(module_scope)
