Metadata-Version: 2.1
Name: reflex-rxchat
Version: 0.2.1
Summary: Local chat for Reflex applications
Author-email: Albert Sola <albert.sola@tardix.net>
License: Apache-2.0
Project-URL: Homepage, https://github.com/albertsola/rxchat
Project-URL: Repository, https://github.com/albertsola/rxchat.git
Project-URL: Bug Tracker, https://github.com/albertsola/rxchat/issues
Keywords: reflex,reflex-custom-components
Classifier: Development Status :: 4 - Beta
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: reflex>=0.6.6
Requires-Dist: aiohttp
Provides-Extra: dev
Requires-Dist: build; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"

# Reflex Chat (rxchat)
[![Tests](https://github.com/albertsola/rxchat/actions/workflows/tests.yml/badge.svg)](https://github.com/albertsola/rxchat/actions/workflows/tests.yml)

Reflex Chat (rxchat) is a versatile and efficient chat interface designed to seamlessly integrate into Reflex projects. Built with the Reflex framework for the frontend and FastAPI for the backend, rxchat offers developers a ready-to-use chat solution that combines simplicity, flexibility, and performance.

![RxChat preview](preview.png "RxChat preview")

## Features

- **Frontend Integration**: Easily integrates with Reflex-based projects for a smooth UI experience.
- **Backend Support**: Powered by FastAPI for fast, reliable, and scalable backend operations.
- **Customizable**: Modify and extend the chat interface to suit your specific needs.
- **Real-Time Communication**: Support for real-time messaging using WebSockets.

## Getting Started

### Prerequisites

Ensure you have the following installed:
- Python 3.13
- poetry

### Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/albertsola/rxchat.git
   cd rxchat
   ```

2. Install Python dependencies:
   ```bash
   poetry install
   poetry run reflex init
   ```
3. Run the project:
   ```bash
   poetry run reflex run
   ```

5. Project running:
   App running at: http://localhost:3000
   Backend running at: http://0.0.0.0:8000/api/docs


### Testing

```
poetry run tox # Checks everything

poetry run flake8

poetry run mypy

poetry run pytest --cov

poetry run black [file or a folder]

```
