"use strict";(self.webpackChunk_jupyter_suggestions_core=self.webpackChunk_jupyter_suggestions_core||[]).push([[405],{405:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(583),a=n(161),s=n(594),r=n(228),i=n(338),g=n(458),l=n(960),c=n(345),u=n.n(c);const d="suggestionsManager",m="@jupyter/suggestions-core",p={id:`${m}:model`,description:"The model of the suggestions panel",autoStart:!0,requires:[r.INotebookTracker,o.ISuggestionsManagerRegistryToken],provides:o.ISuggestionsModelToken,activate:async(e,t,n)=>{console.log(`${m}:model is activated`);const a=e.serviceManager.user,s=await n.getActivatedManager(),r=new o.SuggestionsModel({panel:t.currentWidget,suggestionsManager:s,userManager:a});return t.currentChanged.connect((async(e,n)=>{t.currentWidget?(await t.currentWidget.context.ready,r.switchNotebook(t.currentWidget)):r.switchNotebook(null)})),n.managerChanged.connect(((e,t)=>{r.switchManager(t)})),r}},M={id:`${m}:commands`,description:"A JupyterLab extension for suggesting changes.",autoStart:!0,requires:[r.INotebookTracker,o.ISuggestionsModelToken],optional:[g.ITranslator],activate:(e,t,n,a)=>{console.log(`${m}:commands is activated`);const{commands:s}=e,r=(null!=a?a:g.nullTranslator).load("jupyterlab");s.addCommand(o.COMMAND_IDS.addCellSuggestion,{caption:r.__("Add suggestion"),execute:async()=>{const e=t.currentWidget;e!==n.currentNotebookPanel&&await n.switchNotebook(e),await n.addSuggestion({type:o.SuggestionType.change})},isVisible:()=>!0}),s.addCommand(o.COMMAND_IDS.addDeleteCellSuggestion,{caption:r.__("Add delete cell suggestion"),execute:async()=>{const e=t.currentWidget;e!==n.currentNotebookPanel&&await n.switchNotebook(e),await n.addSuggestion({type:o.SuggestionType.delete})},isVisible:()=>!0}),t.activeCellChanged.connect((()=>{s.notifyCommandChanged(o.COMMAND_IDS.addCellSuggestion),s.notifyCommandChanged(o.COMMAND_IDS.addDeleteCellSuggestion)})),t.selectionChanged.connect((()=>{s.notifyCommandChanged(o.COMMAND_IDS.addCellSuggestion),s.notifyCommandChanged(o.COMMAND_IDS.addDeleteCellSuggestion)}))}},y={id:`${m}:panel`,description:"A JupyterLab extension for suggesting changes.",autoStart:!0,requires:[o.ISuggestionsModelToken,a.ILayoutRestorer],optional:[g.ITranslator],activate:(e,t,n,a)=>{console.log(`${m}:panel is activated`);const s=null!=a?a:g.nullTranslator,r=new o.SuggestionsPanelWidget({model:t,translator:s});r.id="jupyter-suggestions:main-panel",r.title.caption="Jupyter Suggestions",r.title.icon=o.hintIcon,n&&n.add(r,m),e.shell.add(r,"right",{rank:2e3,activate:!1})}},S={id:`${m}:manager`,description:"A JupyterLab extension for suggesting changes.",autoStart:!0,requires:[r.INotebookTracker],optional:[o.ISuggestionsManagerRegistryToken],activate:(e,t,n)=>{if(console.log(`${m}:manager is activated`),n){const e=new o.LocalSuggestionsManager({tracker:t});n.register({id:"Local Suggestion Manager",manager:e})||console.log("Failed to register the local suggestion manager")}}},h=[{id:`${m}:registry`,description:"Provides the suggestions manager registry.",requires:[i.ISettingRegistry],optional:[l.IFormRendererRegistry,g.ITranslator],provides:o.ISuggestionsManagerRegistryToken,autoStart:!0,activate:(e,t,n,a)=>{console.log(`${m}:registry is activated`);const s="suggestionsManager",r=`${m}:registry`,i=new o.SuggestionsManagerRegistry,l=null!=a?a:g.nullTranslator;if(n){const e={fieldRenderer:e=>function(e){const{formContext:t,schema:n}=e,o=(0,c.useMemo)((()=>t.settings),[t.settings]),a=(0,c.useMemo)((()=>{var e,t;return null!==(t=null===(e=null==o?void 0:o.composite)||void 0===e?void 0:e[d])&&void 0!==t?t:"None"}),[null==o?void 0:o.composite]);(0,c.useEffect)((()=>{r(a)}),[a]);const[s,r]=(0,c.useState)(a),i=(0,c.useMemo)((()=>[...n.availableManagers].map((e=>({value:e,label:e})))),[n]),g=(0,c.useCallback)((e=>{null==o||o.set(d,e),r(e)}),[o]);return u().createElement("div",{className:"jp-inputFieldWrapper jp-FormGroup-contentItem"},u().createElement("select",{className:"form-control",value:s,onChange:e=>g(e.target.value)},i.map(((e,t)=>u().createElement("option",{key:t,value:e.value},e.label)))))}({...e,translator:l})};n.addRenderer(`${r}.${s}`,e)}const p=async e=>{const t=e.composite;await i.setManager(t.suggestionsManager)};return t.transform(r,{fetch:e=>{const t=e.schema.properties,n=i.getAllManagers();return n.length&&(t[s].availableManagers=n),e}}),t.load(r).then((e=>{p(e),e.changed.connect((()=>{p(e)}))})).catch((e=>{console.error(e)})),i.managerRegistered.connect((()=>{t.load(r,!0)})),i}},p,y,M,S,{id:`${m}:cell-toolbar`,description:"A JupyterLab extension for suggesting changes.",autoStart:!0,requires:[r.INotebookTracker,o.ISuggestionsModelToken],optional:[g.ITranslator,s.IToolbarWidgetRegistry],activate:(e,t,n,a,s)=>{console.log(`${m}:cell-toolbar is activated`);const{commands:r}=e;s&&s.addFactory("Cell","jupyter-suggestions-core:cell-suggestion-menu",(e=>new o.CellToolbarMenu({cell:e,commands:r,suggestionModel:n})))}}]}}]);