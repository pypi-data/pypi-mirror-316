[project]
name = "gptcomet"
version = "0.1.3"
description = "gptcomet: AI-Powered Git Commit Message Generator."
authors = [
    { name = "belingud", email = "im.victor@qq.com" },
]
readme = "README.md"
packages = [
    { include = "gptcomet" },
]
requires-python = ">=3.9,<4.0"
dependencies = [
    "gitpython>=3.1.43",
    "click>=8.1.7",
    "orjson>=3.10.6",
    "ruamel-yaml>=0.18.6",
    "glom>=23.5.0",
    "typer>=0.12.5",
    "rich>=13.8.0",
    "prompt-toolkit>=3.0.47",
    "httpx>=0.27.2",
    "socksio>=1.0.0",
]
keywords = [
    "ai",
    "git",
    "commit",
    "message",
    "ai-powered",
    "commit-message",
    "gptcomet",
    "chatgpt",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.license]
text = "MIT license"

[project.urls]
Homepage = "https://github.com/belingud/gptcomet"
Repository = "https://github.com/belingud/gptcomet"
Documentation = "https://github.com/belingud/gptcomet"

[project.scripts]
gmsg = "gptcomet.clis.__main__:app"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py39"
line-length = 100
fix = true
exclude = [
    "tests/*",
]
src = [
    "gptcomet",
]

[tool.ruff.lint]
select = [
    "YTT",
    "S",
    "B",
    "A",
    "C4",
    "T10",
    "SIM",
    "I",
    "C90",
    "E",
    "W",
    "F",
    "PGH",
    "UP",
    "RUF",
    "TRY",
]
ignore = [
    "E501",
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = [
    "gptcomet",
]

[tool.pdm]
distribution = true

[tool.pdm.scripts]
bump = "bump2version {args}"
gen_keys = "python scripts/gen_support_keys.py"

[tool.pdm.build]
excludes = [
    "./**/.git",
]
package-dir = "."
includes = [
    "gptcomet",
]

[tool.pytest.ini_options]
addopts = "-rsxX -s -l --tb=short --strict"
testpaths = [
    "tests/",
]
python_files = [
    "test*.py",
]
markers = [
    "skipif: conditionally skip tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[dependency-groups]
dev = [
    "deptry>=0.6.4",
    "pre-commit>=3.8.0",
    "tox>=3.25.1",
    "ruff>=0.5.6",
    "bump2version>=1.0.1",
]
test = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
]
profile = [
    "pyinstrument>=4.7.2",
    "line-profiler>=4.1.3",
]
