[tool.black]
line-length = 88
target-version = ['py310']

[tool.mypy]
packages = ["pyopn"]
python_version = "3.10"
strict = true
ignore_missing_imports = true

[tool.ruff]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
lint.select = ["E", "F", "I", "N", "D", "W", "ANN", "S", "B", "A", "C4", "DTZ", "EM", "ISC", "G", "Q", "RET", "SIM", "TD", "FIX", "PL", "RUF", "LOG"]
lint.ignore = ["E501", "D100", "TD003", "PLR0912", "PLR0915", "D203", "D213", "ISC001"]

# Allow fix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ]
lint.per-file-ignores = {}

# Same as Black.
line-length = 88
indent-width = 4

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[build-system]
requires = ["hatchling>=1.24.2", "hatch-vcs>=0.3.0"]
build-backend = "hatchling.build"

[tool.hatch.build]
build-targets = ["sdist", "wheel"]

[tool.hatch.version]
source = "vcs"
tag-pattern = "^v(?P<version>.+)$"

[tool.hatch.build.hooks.vcs]
version-file = "src/pyopn/_version.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
]

[project]
name = "pyopn"
authors = [
  { name="Alex Christy", email="a.christy@ufl.edu" },
]
description = " A simple Python wrapper for the OPNsense REST API."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration"
]
dependencies = [
    "pbr>=1.6",
    "requests>=2.14.2",
    "validators>=0.34",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/alexchristy/PyOPN"