# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import datetime as dt
import typing
from .letta_response_usage_message_usage import LettaResponseUsageMessageUsage
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LettaResponseUsageMessage(UniversalBaseModel):
    """
    A message representint the usage statistics for the agent interaction.

    Attributes:
    usage (LettaUsageStatistics): Usage statistics for the agent interaction.
    """

    id: str
    date: dt.datetime
    message_type: typing.Optional[typing.Literal["usage_message"]] = None
    usage: LettaResponseUsageMessageUsage = pydantic.Field()
    """
    Usage statistics for the agent interaction.
    
    Attributes:
    completion_tokens (int): The number of tokens generated by the agent.
    prompt_tokens (int): The number of tokens in the prompt.
    total_tokens (int): The total number of tokens processed by the agent.
    step_count (int): The number of steps taken by the agent.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
