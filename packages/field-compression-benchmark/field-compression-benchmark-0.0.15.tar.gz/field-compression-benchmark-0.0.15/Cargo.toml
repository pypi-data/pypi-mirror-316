[workspace]
members = [
    ".",
    "wasi/build",
    "wasi/cli",
    "wasi/clocks",
    "wasi/filesystem",
    "wasi/io",
    "wasi/random",
    "core/benchmark",
    "core/compressor",
    "core/dataset",
    "core/error",
    "core/goodness",
    "core/measure",
    "core/model",
    "codecs/build",
    "codecs/fixed-offset-scale",
    "codecs/fourier-network",
    "codecs/frontend",
    "codecs/bit-round",
    "codecs/identity",
    "codecs/linear-quantize",
    "codecs/log",
    "codecs/random-projection",
    "codecs/reinterpret",
    "codecs/round",
    "codecs/swizzle-reshape",
    "codecs/sz3",
    "codecs/uniform-noise",
    "codecs/wasm-host",
    "codecs/wasm-logging",
    "codecs/zfp",
    "codecs/zlib",
    "codecs/zstd",
    "fcbench",
    "utils/fork",
    "utils/check-wit-deps",
]

[workspace.package]
edition = "2021"
authors = ["Juniper Tyree <juniper.tyree@helsinki.fi>"]
homepage = "https://juntyr.github.io/field-compression-benchmark"
repository = "https://github.com/juntyr/field-compression-benchmark"
license = "MIT OR Apache-2.0"
rust-version = "1.82"

[workspace.dependencies]
# workspace-internal crates
asinh-codec = { path = "codecs/asinh", default-features = false }
bit-round-codec = { path = "codecs/bit-round", default-features = false }
check-wit-deps = { path = "utils/check-wit-deps", default-features = false }
codecs-build = { path = "codecs/build", default-features = false }
codecs-frontend = { path = "codecs/frontend", default-features = false }
codecs-wasm-host = { path = "codecs/wasm-host", default-features = false }
codecs-wasm-logging = { path = "codecs/wasm-logging", default-features = false }
core-benchmark = { path = "core/benchmark", default-features = false }
core-compressor = { path = "core/compressor", default-features = false }
core-dataset = { path = "core/dataset", default-features = false }
core-error = { path = "core/error", default-features = false }
core-goodness = { path = "core/goodness", default-features = false }
core-measure = { path = "core/measure", default-features = false }
core-model = { path = "core/model", default-features = false }
fixed-offset-scale-codec = { path = "codecs/fixed-offset-scale", default-features = false }
fork = { path = "utils/fork", default-features = false }
fourier-network-codec = { path = "codecs/fourier-network", default-features = false }
identity-codec = { path = "codecs/identity", default-features = false }
linear-quantize-codec = { path = "codecs/linear-quantize", default-features = false }
log-codec = { path = "codecs/log", default-features = false }
random-projection-codec = { path = "codecs/random-projection", default-features = false }
reinterpret-codec = { path = "codecs/reinterpret", default-features = false }
round-codec = { path = "codecs/round", default-features = false }
swizzle-reshape-codec = { path = "codecs/swizzle-reshape", default-features = false }
sz3-codec = { path = "codecs/sz3", default-features = false }
uniform-noise-codec = { path = "codecs/uniform-noise", default-features = false }
virtual-wasi-build = { path = "wasi/build", default-features = false }
virtual-wasi-cli = { path = "wasi/cli", default-features = false }
virtual-wasi-clocks = { path = "wasi/clocks", default-features = false }
virtual-wasi-filesystem = { path = "wasi/filesystem", default-features = false }
virtual-wasi-io = { path = "wasi/io", default-features = false }
virtual-wasi-random = { path = "wasi/random", default-features = false }
zfp-codec = { path = "codecs/zfp", default-features = false }
zlib-codec = { path = "codecs/zlib", default-features = false }
zstd-codec = { path = "codecs/zstd", default-features = false }

# crates.io third-party dependencies
anyhow = { version = "1.0", default-features = false }
bloomfilter = { version = "3.0", default-features = false }
byte-unit = { version = "5.1", default-features = false }
clap = { version = "4.5", default-features = false }
clap-markdown = { version = "0.1", default-features = false }
convert_case = { version = "0.6", default-features = false }
crunchy = { version = "0.2", default-features = false }
dyn-clone = { version = "1.0", default-features = false }
evalexpr = { version = "12.0", default-features = false }
fnv = { version = "1.0", default-features = false }
gag = { version = "1.0", default-features = false }
getrandom = { version = "0.2", default-features = false }
human_bytes = { version = "0.4", default-features = false }
indexmap = { version = "2.6", default-features = false }
ipc-channel = { version = "0.19", default-features = false }
libc = { version = "0.2", default-features = false }
log = { version = "0.4", default-features = false }
ndarray = { version = "0.16", default-features = false } # keep in sync with numpy
nonempty = { version = "0.11", default-features = false }
numcodecs = { version = "0.2", default-features = false }
numcodecs-asinh = { version = "0.2", default-features = false }
numcodecs-bit-round = { version = "0.2", default-features = false }
numcodecs-fixed-offset-scale = { version = "0.2", default-features = false }
numcodecs-fourier-network = { version = "0.1", default-features = false }
numcodecs-identity = { version = "0.2", default-features = false }
numcodecs-linear-quantize = { version = "0.3", default-features = false }
numcodecs-log = { version = "0.3", default-features = false }
numcodecs-python = { version = "0.4", default-features = false }
numcodecs-random-projection = { version = "0.2", default-features = false }
numcodecs-reinterpret = { version = "0.2", default-features = false }
numcodecs-round = { version = "0.2", default-features = false }
numcodecs-swizzle-reshape = { version = "0.2", default-features = false }
numcodecs-sz3 = { version = "0.2", default-features = false }
numcodecs-uniform-noise = { version = "0.2", default-features = false }
numcodecs-wasm-guest = { version = "0.2", default-features = false }
numcodecs-zfp = { version = "0.3", default-features = false }
numcodecs-zlib = { version = "0.2", default-features = false }
numcodecs-zstd = { version = "0.2", default-features = false }
numpy = { version = "0.23", default-features = false }
num-traits = { version = "0.2", default-features = false }
polonius-the-crab = { version = "0.4", default-features = false }
pretty_env_logger = { version = "0.5", default-features = false }
puruspe = { version = "0.3", default-features = false }
pyodide-webassembly-runtime-layer = { version = "0.5", default-features = false }
pyo3 = { version = "0.23", default-features = false }
pyo3-error = { version = "0.3", default-features = false }
pyo3-log = { version = "0.12", default-features = false }
pythonize = { version = "0.23", default-features = false }
rand = { version = "0.8", default-features = false }
rand_chacha = { version = "0.3", default-features = false }
rand_core = { version = "0.6", default-features = false }
rand_distr = { version = "0.4", default-features = false }
rand_pcg = { version = "0.3", default-features = false }
rolling-stats = { version = "0.7", default-features = false }
rustix = { version = "0.38", default-features = false }
schemars = { version = "=1.0.0-alpha.15", default-features = false }
scratch = { version = "1.0", default-features = false }
semver = { version = "1.0", default-features = false }
# https://github.com/serde-rs/serde/pull/2566#issuecomment-2438592141
serde = { version = "=1.0.210", default-features = false }
serde-reflection = { version = "0.4", default-features = false }
serde-transcode = { version = "1.1", default-features = false }
serde_json = { version = "1.0", default-features = false }
serde_path_to_error = { version = "0.1", default-features = false }
signal-hook = { version = "0.3", default-features = false }
simple_logger = { version = "5.0", default-features = false }
sorted-vec = { version = "0.8", default-features = false }
tempdir = { version = "0.3", default-features = false }
thiserror = { version = "2.0", default-features = false }
tokio = { version = "1.40", default-features = false }
toml = { version = "0.8", default-features = false }
uuid = { version = "1.11", default-features = false }
vecmap-rs = { version = "0.2", default-features = false }
wac-graph = { version = "0.6", default-features = false }
walkdir = { version = "2.5", default-features = false }
wasi-logger = { version = "0.1", default-features = false }
wasi-preview1-component-adapter-provider = { version = "27.0", default-features = false }
wasmparser = { version = "0.222", default-features = false }
wasmtime = { version = "27.0", default-features = false }
wasmtime_runtime_layer = { version = "27.0", default-features = false }
wasm-encoder = { version = "0.222", default-features = false }
wasm_runtime_layer = { version = "0.4", default-features = false }
wit-bindgen = { version = "0.36", default-features = false }
wit-component = { version = "0.222", default-features = false }
wit-deps = { version = "0.4", default-features = false }
wit-parser = { version = "0.222", default-features = false }

# git third-party dependencies with non-upstream fixes
wasm_component_layer = { git = "https://github.com/juntyr/wasm_component_layer.git", rev = "b633734", version = "0.1", default-features = false }

[workspace.lints.rust]
unsafe_code = "deny"
unstable_features = "forbid"
unused_crate_dependencies = "warn"

[workspace.lints.clippy]
complexity = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

cargo = { priority = -1, level = "warn" }
cargo_common_metadata = "allow"           # FIXME
multiple_crate_versions = "allow"         # FIXME

unwrap_used = "warn"
expect_used = "warn"
indexing_slicing = "warn"
panic = "warn"
todo = "warn"
unimplemented = "warn"
unreachable = "warn"
module_name_repetitions = "allow"

[package]
name = "field-compression-benchmark"
version = "0.1.0"
edition = { workspace = true }
authors = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
readme = "README.md"
license = { workspace = true }
rust-version = { workspace = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { workspace = true, features = ["std"] }
byte-unit = { workspace = true, features = ["std"] }
clap = { workspace = true, features = [
    "derive",
    "std",
    "color",
    "help",
    "usage",
    "error-context",
    "suggestions",
    "string",
] }
clap-markdown = { workspace = true }
codecs-build = { workspace = true }
codecs-frontend = { workspace = true, features = ["wasmtime"] }
core-benchmark = { workspace = true }
core-compressor = { workspace = true }
core-dataset = { workspace = true }
core-error = { workspace = true }
fork = { workspace = true }
gag = { workspace = true }
getrandom = { workspace = true, features = ["std"] }
log = { workspace = true }
nonempty = { workspace = true, features = ["serialize"] }
pretty_env_logger = { workspace = true }
pyo3 = { workspace = true, features = ["abi3"] }
pyo3-error = { workspace = true }
serde_json = { workspace = true, features = ["std"] }
thiserror = { workspace = true }
vecmap-rs = { workspace = true, features = ["serde"] }

[lints]
workspace = true
