import{d as x,B as y,W as b,M as g,f as w,c as h,g as a,i as k,u as v,o as B,j as u,k as e,E as C,G as r,A as P,K as E,P as l,Y as I}from"./index-Dkae_997.js";import{_ as K}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-As55GY35.js";import{u as N}from"./usePageTitle-DGuB4AZ9.js";import{u as T}from"./usePrefectApi-ugHPWJzM.js";import"./mapper-CXwTfIzn.js";import"./api-DD4AY08s.js";const G=x({__name:"AutomationEdit",async setup(U){let o,m;const i=T(),c=y(),_=v(),p=b("automationId"),s=([o,m]=g(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);N(`Edit Automation: ${s.name}`);const f=w(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function A(d){try{await i.automations.updateAutomation(p.value,d),l(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=I(t,r.error.automationUpdate);l(n,"error",{timeout:!1})}}return(d,t)=>{const n=k("p-layout-default");return B(),h(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(E),{crumbs:f.value},{actions:a(()=>[u(e(C),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[P(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(K,{automation:e(s),editing:"",onSubmit:A},null,8,["automation"])]),_:1})}}});export{G as default};
//# sourceMappingURL=AutomationEdit-C7-2Pu9o.js.map
