name: Test
on:
  push: { branches: [ "main" ] }
  pull_request: { branches: [ "main" ] }

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ["3.9", "3.10", "3.11"]
        os: ["ubuntu-latest", "windows-latest"]
        source: ["conda", "pip"]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with: { submodules: recursive }
      - name: setup conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "${{ matrix.python }}"
          miniforge-variant: Mambaforge
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f environment.yml
          conda list
        if: ${{ matrix.source == 'conda' }}
      - name: install echemdb-converters
        shell: bash -l {0}
        run: |
          pip install --no-dependencies .
        if: ${{ matrix.source == 'conda' }}
      - name: install echemdb-converters
        shell: bash -l {0}
        run: |
          pip install .
        if: ${{ matrix.source == 'pip' }}
      - name: doctest
        shell: bash -l {0}
        run: |
          pytest --doctest-modules echemdbconverters
        if: ${{ matrix.source == 'conda' }}
      # Disable testing readme with byexample (see #187)
      # - name: byexample
      #   shell: bash -l {0}
      #   run: |
      #     mamba install -y byexample
      #     # byexample -l shell,python -o +norm-ws --timeout=30 README.md
        ## byexample is not available for Windows
        ## the exact numerical output of commands differs between Linux & macOS
        # if: ${{ matrix.os == 'ubuntu-latest' && matrix.source == 'conda' }}
      - name: cli-default-csv
        shell: bash -l {0}
        run: |
          echemdbconverters csv test/csv/default.csv --outdir test/generated
          git diff --no-index --word-diff -- test/generated/default.json test/generated/default.json.expected
          python -c 'import pandas; pandas.testing.assert_frame_equal(pandas.read_csv("test/generated/default.csv"), pandas.read_csv("test/generated/default.csv.expected"))'
      - name: cli-unit-csv
        shell: bash -l {0}
        run: |
          echemdbconverters csv test/csv/unit.csv --outdir test/generated --metadata test/csv/unit.csv.metadata
          git diff --no-index --word-diff -- test/generated/unit.json test/generated/unit.json.expected
          python -c 'import pandas; pandas.testing.assert_frame_equal(pandas.read_csv("test/generated/unit.csv"), pandas.read_csv("test/generated/unit.csv.expected"))'
      - name: cli-eclab-csv
        shell: bash -l {0}
        run: |
          echemdbconverters csv test/csv/eclab_cv_csv.mpt --outdir test/generated --metadata test/csv/eclab_cv_csv.mpt.metadata --device eclab
          git diff --no-index --word-diff -- test/generated/eclab_cv_csv.json test/generated/eclab_cv_csv.json.expected
          python -c 'import pandas; pandas.testing.assert_frame_equal(pandas.read_csv("test/generated/eclab_cv_csv.csv"), pandas.read_csv("test/generated/eclab_cv_csv.csv.expected"))'
      - name: cli-eclab-ca-cp-decimal-comma
        shell: bash -l {0}
        run: |
          echemdbconverters csv test/csv/eclab_ca-cc_csv_decimal_comma.mpt --outdir test/generated --metadata test/csv/eclab_ca-cc_csv_decimal_comma.mpt.metadata --device eclab
          git diff --no-index --word-diff -- test/generated/eclab_ca-cc_csv_decimal_comma.json test/generated/eclab_ca-cc_csv_decimal_comma.json.expected
          python -c 'import pandas; pandas.testing.assert_frame_equal(pandas.read_csv("test/generated/eclab_ca-cc_csv_decimal_comma.csv"), pandas.read_csv("test/generated/eclab_ca-cc_csv_decimal_comma.csv.expected"))'
