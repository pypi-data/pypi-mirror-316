[tool.poetry]
name = "cookiecutter-rag"
version = "v0.0.2"
description = "A python cookiecutter application to create a new python project for GenAI RAG application that uses poetry to manage its dependencies."
authors = ["Deepak Pant <DeepakPant93@gmail.com>"]
repository = "https://github.com/DeepakPant93/cookiecutter-rag"
documentation = "https://DeepakPant93.github.io/cookiecutter-rag/"
readme = "README.md"
keywords = ['cookiecutter', 'template', 'poetry']
packages = [
  {include = "cookiecutter_poetry"}
]
include = [
  '{{cookiecutter.project_name}}/**/*',
  'cookiecutter.json',
  'hooks/*'
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
cookiecutter = "^2.1.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pre-commit = "^2.20.0"
pytest-cookies = "^0.6.1"
tox = "^3.25.1"
deptry = "^0.16.2"
mypy = "^0.991"
pytest-cov = "^4.0.0"
# flake8 = "^6.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^8.5.10"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
cc_rag = 'cookiecutter_poetry.cli:main'

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["cookiecutter_poetry"]

[tool.mypy]
files = ['cookiecutter_poetry']
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
exclude = ""

[tool.deptry]
extend_exclude = [
  ".+/tests/.*",
  ".+/__init__.py",
  ".+/main.py",
  ".+/*.ipynb",
  ".+/api/.*",

]

[tool.deptry.per_rule_ignores]
DEP002 = ["cookiecutter"]

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Possible binding to all interfaces - Require for Docker container
    "S104"
]

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",

]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
