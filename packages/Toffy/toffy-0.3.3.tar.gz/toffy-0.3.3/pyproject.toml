[tool.poetry]
name = "Toffy"
version = "0.3.3"
description = "Scripts for interacting with and generating data from the commercial MIBIScope."
authors = [
    "Noah Frey Greenwald <nfgreen@stanford.edu>",
    "Adam Kagel <ackagel@stanford.edu>",
    "Alex Kong <alkong@stanford.edu>",
    "Cami Laura Sowers <csowers@stanford.edu>",
    "Sricharan Reddy Varra <srivarra@stanford.edu>",
]
license = "Modified Apache 2.0"
homepage = "https://github.com/angelolab/toffy"
repository = "https://github.com/angelolab/toffy"
documentation = "https://toffy.readthedocs.io"
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [{ include = 'toffy', from = 'src' }]

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
bump = true
style = "pep440"
metadata = false

[tool.poetry.dependencies]
python = "^3.9,<3.12"
alpineer = ">=0.1.10"
mibi-bin-tools = ">=0.2.14"
ipywidgets = "^8"
numpy = "1.*"
natsort = "^8"
seaborn = "^0.13"
scikit-learn = "^1"
watchdog = "^6"
tqdm = "^4"
scipy = "^1.10.1"
pandas = "^2"
pywavelets = "^1.4.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coveralls = { version = "^3.3.1", extras = ["toml"] }
pytest = "^7.2.2"
pytest-cases = "^3.6.14"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-pycodestyle = "^2.3.1"
pytest-randomly = "^3.12.0"
mock = "^5.0.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
isort = "^5.10.1"
jupyterlab = "^3.6.1"
jupyter-contrib-nbextensions = "^0.7.0"
loguru = "^0.7.0"

## TYPE CHECKING ##

[tool.mypy]
python_version = "3.9"
mypy_path = "$MYPY_CONFIG_FILE_DIR/src:$MYPY_CONFIG_FILE_DIR/tests"
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false
ignore_missing_imports = true

## LINTING, FORMATTING ##

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
preview = true

[tool.isort]
py_version = 38
line_length = 100
profile = "black"
multi_line_output = 3

## COVERAGE ##

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["toffy"]

[tool.coverage.report]
exclude_lines = [
    "except ImportError",
    "raise AssertionError",
    "raise NotImplementedError",
]

show_missing = true
ignore_errors = false
fail_under = 45
omit = ["**/*test*.py"]

## TESTING ##

[tool.pytest.ini_options]
addopts = ["-vv", "-s", "--cov", "--pycodestyle", "--cov-report=lcov"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
testpaths = ["tests"]
norecursedirs = ["tests/utilities"]

log_cli = true
log_level = "INFO"
log_file = "pytest.txt"
log_file_level = "INFO"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
