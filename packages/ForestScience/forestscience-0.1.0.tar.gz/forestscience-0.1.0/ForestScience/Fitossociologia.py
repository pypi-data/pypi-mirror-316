"""A seguir será apresentada a documentação e exemplo de uso da classe `Fitossociologia`"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_Fitossociologia.ipynb.

# %% auto 0
__all__ = ['Fitossociologia']

# %% ../nbs/01_Fitossociologia.ipynb 3
class Fitossociologia:

    "Cálculo fitossociológico e análise de diversidade"

    def __processamento(
        dados,
        dap: str,
        area_amostrada: float,
        identificacao_arvore: str,
        parcela: str = None,
    ):

        dados = dados.copy()

        dados.rename(columns={identificacao_arvore: "Nome"}, inplace=True)

        dados["AB"] = (np.pi * (dados[dap] * dados[dap])) / 40000

        if parcela is None:

            df_fito = (
                dados.groupby("Nome")
                .agg(N=("Nome", "count"), AB=("AB", "sum"))
                .reset_index()
            )

        else:

            df_fito = (
                dados.groupby("Nome")
                .agg(N=("Nome", "count"), AB=("AB", "sum"), FP=(parcela, "nunique"))
                .reset_index()
            )

            # calculando frequências
            n_parcelas = dados[parcela].nunique()

            df_fito["FA"] = (df_fito["FP"] / n_parcelas) * 100
            df_fito["FR"] = (df_fito["FA"] / (np.sum(df_fito["FA"]))) * 100

        # calculando densidade
        df_fito["DA"] = df_fito["N"] / area_amostrada
        df_fito["DR"] = (df_fito["DA"] / np.sum(df_fito["DA"])) * 100
        df_fito["DoA"] = df_fito["AB"] / area_amostrada
        df_fito["DoR"] = (df_fito["DoA"] / np.sum(df_fito["DoA"])) * 100
        df_fito["IVC"] = (df_fito["DR"] + df_fito["DoR"]) / 2

        return df_fito.sort_values("Nome")

    def __diversidade(df_fito):

        # calculando indíces de diversidade
        S = round(len(df_fito["Nome"]), 0)
        Nid = round(np.sum(df_fito["N"]), 0)
        DA = round((np.sum(df_fito["DA"])), 4)
        Hmax = round((np.log(S)), 4)
        H = round(
            (
                (
                    (Nid * (np.log(Nid)))
                    - (np.sum((df_fito["N"] * np.log(df_fito["N"]))))
                )
                / Nid
            ),
            4,
        )
        Simpson = round(1 - np.sum((df_fito["N"] / Nid) ** 2), 4)
        J = round((H / Hmax), 4)
        diversidade = [S, Nid, DA, Hmax, H, Simpson, J]
        diversidade

        # criando lista com nome das linhas
        linhas = [
            "Número de espécies amostrados – S",
            "Número de indivíduos amostrados – N",
            "Densidade Absoluta – DA",
            "Máxima Diversidade Possível – Ln(S)",
            "Índice de Shannon-Wiener– H",
            "Índice de dominância de Simpson (C)",
            "Índice de Equabilidade de Pielou – J",
        ]

        return pd.DataFrame({"Parâmetro": linhas, "Valor": diversidade})

    def __init__(
        self,
        dados,  # tabela com as informações das árvores
        dap: str,  # nome da coluna com o diamêtro a altura do peito em cm
        area_amostrada: float,  # área amostrada em hectares
        identificacao_arvore: str,  # nome da coluna com nome da árvore
        parcela: str = None,  # nome da coluna com identificação das parcelas
    ):

        tabela_fito = Fitossociologia._Fitossociologia__processamento(
            dados, dap, area_amostrada, identificacao_arvore, parcela
        )

        self.tabela_fitossociologia = tabela_fito
        self.tabela_diversidade = Fitossociologia._Fitossociologia__diversidade(
            tabela_fito
        )

    def salvar_resultados(self):

        self.tabela_fitossociologia.to_csv(
            "tabela_fitossociologia.csv", encoding="utf-8-sig", index=False, sep=";"
        )
        self.tabela_diversidade.to_csv(
            "tabela_diversidade.csv", encoding="utf-8-sig", index=False, sep=";"
        )

        print("Arquivos salvos com sucesso.")

# %% ../nbs/01_Fitossociologia.ipynb 4
#from ForestScience.Fitossociologia import *
import pandas as pd
import numpy as np
