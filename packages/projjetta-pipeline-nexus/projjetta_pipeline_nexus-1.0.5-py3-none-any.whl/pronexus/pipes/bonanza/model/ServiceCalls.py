from sqlalchemy import String, Column, DateTime, Float, Integer, ForeignKey
from sqlalchemy.orm import relationship
from .sap_model import SapBonanzaBase as SBB


class ServiceCall(SBB):
    __tablename__ = 'service_calls'

    ServiceCallID = Column('ServiceCallID', Integer, primary_key=True)
    Subject = Column('Subject', String)
    CustomerCode = Column('CustomerCode', String)
    CustomerName = Column('CustomerName', String)
    ContactCode = Column('ContactCode', Integer)
    ContractID = Column('ContractID', Integer, nullable=True)
    #ContractEndDate = Column('ContractEndDate', DateTime, nullable=True)
    ResolutionDate = Column('ResolutionDate', DateTime, nullable=True)
    ResolutionTime = Column('ResolutionTime', String, nullable=True)
    Origin = Column('Origin', String, nullable=True)
    ItemCode = Column('ItemCode', String, nullable=True)
    #ItemDescription = Column('ItemDescription', String, nullable=True)
    #ItemGroupCode = Column('ItemGroupCode', Integer, nullable=True)
    Status = Column('Status', Integer)
    Priority = Column('Priority', String)
    CallType = Column('CallType', String, nullable=True)
    ProblemType = Column('ProblemType', String, nullable=True)
    AssigneeCode = Column('AssigneeCode', Integer)
    Description = Column('Description', String, nullable=True)
    TechnicianCode = Column('TechnicianCode', Integer, nullable=True)
    Resolution = Column('Resolution', String)
    CreationDate = Column('CreationDate', DateTime)
    CreationTime = Column('CreationTime', String)
    Responder = Column('Responder', Integer)
    UpdatedTime = Column('UpdatedTime', String)
    #BelongsToAQueue = Column('BelongsToAQueue', String)
    ResponseByTime = Column('ResponseByTime', String, nullable=True)
    ResponseByDate = Column('ResponseByDate', DateTime, nullable=True)
    ResolutionOnDate = Column('ResolutionOnDate', DateTime)
    ResponseOnTime = Column('ResponseOnTime', String)
    ResponseOnDate = Column('ResponseOnDate', DateTime)
    ClosingTime = Column('ClosingTime', String)
    AssignedDate = Column('AssignedDate', DateTime)
    Queue = Column('Queue', String, nullable=True)
    ResponseAssignee = Column('ResponseAssignee', Integer)
    EntitledforService = Column('EntitledforService', String)
    ResolutionOnTime = Column('ResolutionOnTime', String)
    AssignedTime = Column('AssignedTime', String)
    ClosingDate = Column('ClosingDate', DateTime)
    Series = Column('Series', Integer)
    DocNum = Column('DocNum', Integer)
    HandWritten = Column('HandWritten', String)
    PeriodIndicator = Column('PeriodIndicator', String)
    StartDate = Column('StartDate', DateTime)
    StartTime = Column('StartTime', String)
    EndDueDate = Column('EndDueDate', DateTime)
    EndTime = Column('EndTime', String)
    Duration = Column('Duration', Float)
    DurationType = Column('DurationType', String)
    Reminder = Column('Reminder', String)
    ReminderPeriod = Column('ReminderPeriod', Float)
    ReminderType = Column('ReminderType', String)
    Location = Column('Location', Integer)
    AddressName = Column('AddressName', String, nullable=True)
    AddressType = Column('AddressType', String)
    Street = Column('Street', String, nullable=True)
    City = Column('City', String, nullable=True)
    Room = Column('Room', String, nullable=True)
    State = Column('State', String, nullable=True)
    Country = Column('Country', String, nullable=True)
    #DisplayInCalendar = Column('DisplayInCalendar', String)
    CustomerRefNo = Column('CustomerRefNo', String, nullable=True)
    ProblemSubType = Column('ProblemSubType', String, nullable=True)
    AttachmentEntry = Column('AttachmentEntry', Integer, nullable=True)
    ServiceBPType = Column('ServiceBPType', String)
    BPContactPerson = Column('BPContactPerson', String, nullable=True)
    # BPPhone1 = Column('BPPhone1', String)
    # BPPhone2 = Column('BPPhone2', String, nullable=True)
    # BPCellular = Column('BPCellular', String, nullable=True)
    # BPeMail = Column('BPeMail', String, nullable=True)
    # BPProjectCode = Column('BPProjectCode', String, nullable=True)
    # BPTerritory = Column('BPTerritory', String, nullable=True)
    # BPShipToCode = Column('BPShipToCode', String, nullable=True)
    # BPShipToAddress = Column('BPShipToAddress', String, nullable=True)
    # BPBillToCode = Column('BPBillToCode', String, nullable=True)
    # BPBillToAddress = Column('BPBillToAddress', String, nullable=True)
    # Telephone = Column('Telephone', String)
    UpdateDate = Column('UpdateDate', DateTime)
    SupplementaryCode = Column('SupplementaryCode', String, nullable=True)
    # U_SCGD_encsatis = Column('U_SCGD_encsatis', String, nullable=True)
    # U_SCGD_Placa = Column('U_SCGD_Placa', String, nullable=True)
    # U_SCGD_D_Marca = Column('U_SCGD_D_Marca', String, nullable=True)
    # U_SCGD_D_Est = Column('U_SCGD_D_Est', String, nullable=True)
    # U_SCGD_D_Mod = Column('U_SCGD_D_Mod', String, nullable=True)
    # U_SCGD_Vin = Column('U_SCGD_Vin', String, nullable=True)
    # U_SCGD_NoUn = Column('U_SCGD_NoUn', String, nullable=True)
    # U_SCGD_Agenda = Column('U_SCGD_Agenda', String, nullable=True)
    # U_SCGD_Cita = Column('U_SCGD_Cita', String, nullable=True)
    # U_SCGD_FcCita = Column('U_SCGD_FcCita', DateTime, nullable=True)
    # U_SCGD_HrCita = Column('U_SCGD_HrCita', String, nullable=True)
    # U_SCGD_Razon = Column('U_SCGD_Razon', String, nullable=True)
    # U_SCGD_IdVeh = Column('U_SCGD_IdVeh', Integer, nullable=True)
    # U_SCGD_Cod_Marca = Column('U_SCGD_Cod_Marca', String, nullable=True)
    # U_SCGD_Cod_Estilo = Column('U_SCGD_Cod_Estilo', String, nullable=True)
    # U_SCGD_Cod_Modelo = Column('U_SCGD_Cod_Modelo', String, nullable=True)
    # U_SCGD_GenCita = Column('U_SCGD_GenCita', Integer, default=0)
    # U_SCGD_Cotiz = Column('U_SCGD_Cotiz', String, nullable=True)
    # U_SCGD_NoCita = Column('U_SCGD_NoCita', String, nullable=True)
    # U_GB_CardCode = Column('U_GB_CardCode', String, nullable=True)
    # U_GB_CardName = Column('U_GB_CardName', String, nullable=True)
    U_GB_ValorReclam = Column('U_GB_ValorReclam', Float, default=0.0)
    U_GB_ValorRecon = Column('U_GB_ValorRecon', Float, default=0.0)

    # Relationship with Service Call Activities
    service_call_activities = relationship("ServiceCallActivity", back_populates="service_call")

    def __repr__(self):
        return f"<ServiceCall(service_call_id='{self.ServiceCallID}', customer_name='{self.CustomerName}')>"


class ServiceCallActivity(SBB):
    __tablename__ = 'service_call_activities'

    id = Column(Integer, primary_key=True, autoincrement=True)
    ServiceCallID = Column(Integer, ForeignKey(f'{SBB.__table_args__.get("schema")}.service_calls.ServiceCallID'))
    LineNum = Column('LineNum', Integer)
    ActivityCode = Column('ActivityCode', Integer)
   
    service_call = relationship("ServiceCall", back_populates="service_call_activities")

    def __repr__(self):
        return f"<ServiceCallActivity(activity_description='{self.ActivityCode}')>"
