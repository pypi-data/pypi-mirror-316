[project]
name = "schwarm"
version = "0.1.83"
description = "A very opinionated package for building agent systems. Also very alpha."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "arxiv>=2.1.3",
    "beautifulsoup4>=4.12.3",
    "devtools>=0.12.2",
    "diskcache>=5.6.3",
    "fastapi>=0.115.5",
    "ipywidgets>=8.1.5",
    "litellm>=1.53.1",
    "litestar>=2.13.0",
    "loguru>=0.7.2",
    "nest-asyncio>=1.6.0",
    "opentelemetry-api>=1.28.2",
    "opentelemetry-exporter-jaeger>=1.21.0",
    "opentelemetry-exporter-otlp>=1.28.2",
    "opentelemetry-instrumentation-logging>=0.49b2",
    "opentelemetry-sdk>=1.28.2",
    "orjson>=3.10.11",
    "poethepoet>=0.29.0",
    "pydantic>=2.9.2",
    "pymongo>=4.10.1",
    "python-decouple>=3.8",
    "python-dotenv>=1.0.1",
    "python-socketio[async]>=5.11.4",
    "pywebview>=5.3.2",
    "rich>=13.9.4",
    "tavily-python>=0.5.0",
    "typer>=0.12.5",
    "uvicorn>=0.32.1",
    "websockets>=14.1",
    "zep-python>=2.0.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-clarity>=1.0.1",
    "pytest-cov>=6.0.0",
    "pytest-sugar>=1.0.0",
    "ipykernel>=6.29.5",
    "ruff>=0.7.2",
    "pytest-asyncio>=0.24.0",
    "faker>=30.8.2",
    "tinydb>=4.8.2",
    "ipywidgets>=8.1.5",
    "poethepoet>=0.30.0",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
schwarm = "schwarm.app:main"


# Build
[tool.hatch.build.targets.sdist]
include = [
    "/src/schwarm/*.html",
    "/src/schwarm/assets/**",
    "/src/schwarm/*.py",
    "/src/schwarm/**/*.py",
]
ignore-vcs = true


# pipeline


[tool.poe.tasks.nektar_npm_install]
cmd = "npm install"
cwd = "src/frontend"

[tool.poe.tasks.nektar_npm_build]
cmd = "npm run build"
cwd = "src/frontend"


[tool.poe.tasks.schwarm_sync]
cmd = "uv sync --all-groups"
cwd = "."

[tool.poe.tasks.schwarm_build]
cmd = "uv build"
cwd = "."


[tool.poe.tasks.schwarm_run]
cmd = "uv run schwarm"
cwd = "."

[tool.poe.tasks.schwarm_publish]
cmd = "uv publish"
cwd = "."

[tool.poe.tasks.rm_dist]
cmd = "rm -r dist"
cwd = "."

[tool.poe.tasks.miau]
sequence = [
    "nektar_npm_install",
    "nektar_npm_build",
    "schwarm_sync",
    "schwarm_build",
    "schwarm_run",
]

[tool.poe.tasks.quack]
sequence = [
    "nektar_npm_install",
    "nektar_npm_build",
    "schwarm_sync",
    "schwarm_build",
    "schwarm_publish",
]


[tool.pyright]
include = ["."]
exclude = [
    "**/.venv",
    "**/dump",          # exclude virtual environment - exclude means that it will not be scanned
    "**/settings.json",
    "src/frontend/",
]
useLibraryCodeForTypes = true
ignore = [
    "**/settings.json",
] # ignore means that it will be scanned but not checked
defineConstant = { DEBUG = true }
reportMissingImports = "error"
reportMissingTypeStubs = false
typeCheckingMode = "basic"


[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
## formatting
format.quote-style = "double"
format.indent-style = "space"
format.skip-magic-trailing-comma = false
format.line-ending = "auto"
format.docstring-code-format = true
format.docstring-code-line-length = "dynamic"
## linting
lint.select = [
    'D',   #pydocstyle
    'E',
    'W',   # pycodestyle
    'F',   #pyflakes
    'I',   # sort imports
    'UP',  #pyupgrade
    "RUF", # ruff dev's own rules
    "SIM", # pyflakes simplicity
    "C90", # more complexity rules
]
lint.ignore = ["E203", "E266", "E501", "F541", "D417"]
lint.exclude = ["logs/", "data/", "tests/", "docs/", "dump/"]
lint.pydocstyle.convention = "google"
lint.isort.combine-as-imports = true
exclude = [
    "logs/",
    "data/",
    "tests/",
    "docs/",
    "src/templates/",
    "dump/",
    "src/frontend/",
]

[tool.pytest.ini_options]
addopts = " -v"
minversion = "6.0"
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test"
verbosity_test_cases = 2
