"""
This type stub file was generated by pyright.
"""

from functools import cached_property
from codegen.utils.codemod.codemod_writer_decorators import apidoc
from graph_sitter.core.autocommit import reader, writer
from graph_sitter.core.expressions.chained_attribute import ChainedAttribute
from graph_sitter.core.expressions.defined_name import DefinedName
from graph_sitter.core.expressions.name import Name

@apidoc
class HasName:
    """An interface for any node object that has a name."""
    _name_node: Name | ChainedAttribute | DefinedName | None = ...
    @cached_property
    @reader
    def name(self) -> str | None:
        """Retrieves the name of the object excluding any namespace prefixes.

        Returns the "base" name of the object without any namespace or module prefix. For instance, for an object 'a.b',
        this method returns 'b'.

        Returns:
            str | None: The base name of the object as a string, or None if there is no associated name node.
        """
        ...
    
    @cached_property
    @reader
    def full_name(self) -> str | None:
        """Returns the full name of the object, including the namespace path.

        Returns the complete qualified name of an object, including any parent class or namespace paths.
        For class methods, this returns the parent class's full name followed by the method name.
        For chained attributes (e.g., 'a.b'), this returns the full chained name.

        Args:
            None

        Returns:
            str | None: The complete qualified name of the object. Returns None if no name is available.
            For class methods, returns 'ParentClass.method_name'.
            For chained attributes, returns the full chain (e.g., 'a.b').
            For simple names, returns just the name.
        """
        ...
    
    @reader
    def get_name(self) -> Name | ChainedAttribute | None:
        """Returns the Name node of the object.

        Retrieves the name node of the object which can be used for modification operations.

        Returns:
            Name | ChainedAttribute | None: The name node of the object. Can be a Name node for simple names,
                a ChainedAttribute for names with namespaces (e.g., a.b), or None if the object has no name.
        """
        ...
    
    @writer
    def set_name(self, name: str) -> None:
        """Sets the name of a code element.

        Modifies the name of the object's underlying name node. Works with both simple names and chained attributes (e.g., 'a.b').

        Args:
            name (str): The new name to set for the object.

        Returns:
            None
        """
        ...
    
    @writer
    def rename(self, name: str) -> None:
        """Sets the name of an object and updates all its usages throughout the codebase.

        This method renames a symbol (like a class, function, variable) and automatically updates all references
        to this symbol throughout the codebase, ensuring consistency across all usages.

        Args:
            name (str): The new name to assign to the object.

        Returns:
            None
        """
        ...
    


