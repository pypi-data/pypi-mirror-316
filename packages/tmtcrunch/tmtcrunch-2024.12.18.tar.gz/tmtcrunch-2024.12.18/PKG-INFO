Metadata-Version: 2.1
Name: tmtcrunch
Version: 2024.12.18
Summary: Python utility for TMT-based proteomics
Author-email: Max Brazhnikov <makc@issp.ac.ru>
Maintainer-email: Max Brazhnikov <makc@issp.ac.ru>
License: BSD-3-Clause
Project-URL: homepage, https://codeberg.org/makc/tmtcrunch
Project-URL: repository, https://codeberg.org/makc/tmtcrunch.git
Keywords: proteomics
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pyteomics
Requires-Dist: tomli; python_version < "3.11"

# TMTCrunch

TMTCrunch is an open-source Python utility for analysis of tandem mass tag (TMT) proteomics data with the focus on protein isoforms resulting from alternative spicing.

## Istallation

### Installing from PyPI
The latest released version can be installed from the [Python Package Index](https://pypi.org/project/tmtcrunch):
```shell
pip install tmtcrunch
```

### Installing from source
The development version can be installed directly from the source repository:
```shell
pip install https://codeberg.org/makc/tmtcrunch.git
```

## Dependencies
TMTCrunch relies on the following Python packages:
- [numpy](https://pypi.org/project/numpy/)
- [pandas](https://pypi.org/project/pandas/)
- [pyteomics](https://pypi.org/project/pyteomics/)
- [tomli](https://pypi.org/project/tomli/) (required only for Python < 3.11)
and it would use statistics functions from [astropy](https://pypi.org/project/astropy/) package if available.

## Command line options
```
usage: tmtcrunch [-h] [--specimen-tags SPECIMEN_TAGS] [--gis-tags GIS_TAGS]
                 [--cfg CFG] [--output-dir OUTPUT_DIR] [--output-prefix OUTPUT_PREFIX]
                 [--keep-columns KEEP_COLUMNS [KEEP_COLUMNS ...]] [--verbose {0,1,2}]
                 [--version]
                 file [file ...]

positional arguments:
  file                  Scavager *_PSMs_full.tsv files.

options:
  -h, --help            show this help message and exit
  --specimen-tags SPECIMEN_TAGS
                        Comma-separated sequence of specimen TMT tags.
  --gis-tags GIS_TAGS   Comma-separated sequence of GIS TMT tags.
  --cfg CFG             Path to configuration file.
  --output-dir OUTPUT_DIR, --odir OUTPUT_DIR
                        Existing output directory. Default is current directory.
  --output-prefix OUTPUT_PREFIX, --oprefix OUTPUT_PREFIX
                        Prefix for output files. Default is 'tmtcrunch_'.
  --keep-columns KEEP_COLUMNS [KEEP_COLUMNS ...]
                        Extra columns from input files to keep in output files.
  --verbose {0,1,2}     Logging verbosity. Default is 1.
  --version             Output version information and exit.
```

## Configuration file
TMTCrunch stores its configuration in [TOML](https://toml.io) format.

Default TMTCrunch configuration:
```TOML
# Specimen TMT labels.
specimen_tags = ['127C', '127N', '128C', '128N', '129C', '129N', '130C', '130N', '131']
# Global internal standard (GIS) TMT labels.
gis_tags = ['126', '131C']

# Prefix of decoy proteins.
decoy_prefix = 'DECOY_'

# List of column names from input files to save in the output.
keep_columns = []

# If true, perform PSM groupwise analysis.
groupwise = true

# Keys below are only applicable if groupwise analysis is requested.

# Prefixes of target proteins. If not set, `target_prefixes` will be deduced
# from the prefixes of PSM groups.
# target_prefixes = ['alt_', 'canon_']

# PSM group is named after its subkey and defined by three keys:
# `descr` - group description
# `prefixes` - prefixes of target proteins
# `fdr` - groupwise false discovery rate

# Isoform PSMs: protein group of each PSM should consist of proteins
# with 'alt_' prefix only.
[psm_group.isoform]
descr = 'Isoform PSMs'
prefixes = [['alt_']]
fdr = 0.05

# Canonical PSMs: protein group of each PSM should consist of proteins
# with 'canon_' prefix only.
[psm_group.canon]
descr = 'Canonical PSMs'
prefixes = [['canon_']]
fdr = 0.01

# Shared PSMs: protein group of each PSM should consist both of
# 'canon_' and 'alt_' proteins.
[psm_group.shared]
descr = 'Shared PSMs'
prefixes = [['canon_', 'alt_']]
fdr = 0.01
```

## License
TMTCrunch is distributed under a BSD License.

## Related software
 - [Pyteomics](https://github.com/levitsky/pyteomics) - Python framework for proteomics data analysis.
 - [IdentiPy](https://github.com/levitsky/identipy) - search engine for bottom-up proteomics.
 - [Scavager](https://github.com/markmipt/scavager) - proteomics post-search validation tool.
