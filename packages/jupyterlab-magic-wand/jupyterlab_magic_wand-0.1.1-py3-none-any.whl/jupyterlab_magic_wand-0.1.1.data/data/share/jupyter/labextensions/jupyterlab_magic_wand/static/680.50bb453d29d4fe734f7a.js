"use strict";(self.webpackChunkjupyterlab_magic_wand=self.webpackChunkjupyterlab_magic_wand||[]).push([[299,680],{680:(e,t,o)=>{o.r(t),o.d(t,{CellFooterTracker:()=>c,ContentFactoryWithFooter:()=>h,ICellFooterTracker:()=>i});var r=o(262),n=o(256),l=o(960);const a="jp-cellfooter";class d extends n.Panel{constructor(){super(),this.id=a,this.addClass(a),this.toolbar=new l.Toolbar,this.toolbar.addClass("jp-cellfooter-toolbar"),this.toolbar.addItem("spacer",l.Toolbar.createSpacerItem()),this.toolbar.addItem("clear",new l.ToolbarButton({icon:l.closeIcon,enabled:!0,onClick:()=>{this.hide()}})),this.addWidget(this.toolbar)}addItemOnLeft(e,t){var o;null===(o=this.toolbar)||void 0===o||o.insertBefore("spacer",e,t)}addItemOnRight(e,t){var o;null===(o=this.toolbar)||void 0===o||o.insertBefore("clear",e,t)}}const i=new r.Token("cellFooterTracker");class c{constructor(e){this._notebookTracker=e}getFooter(e){var t;const o=e||(null===(t=this._notebookTracker.activeCell)||void 0===t?void 0:t.model.id);if(void 0===o)return;const{cell:r}=function(e,t){var o,r;const n=t.currentWidget,l=null===(r=null===(o=t.currentWidget)||void 0===o?void 0:o.content._findCellById(e))||void 0===r?void 0:r.cell;if(n&&l)return{cell:l,notebook:n};const a=t.find((t=>{var o;return!!(null===(o=t.content._findCellById(e))||void 0===o?void 0:o.cell)}));return{cell:l,notebook:a}}(o,this._notebookTracker);return r?function(e){return(null==e?void 0:e.layout).widgets.find((e=>e.id===a))}(r):void 0}addItemOnLeft(e){const t=this.getFooter(e.cellId);null==t||t.addItemOnLeft(e.name,e.item)}addItemOnRight(e){const t=this.getFooter(e.cellId);null==t||t.addItemOnRight(e.name,e.item)}hideFooter(e){const t=this.getFooter(e);null==t||t.hide()}showFooter(e){const t=this.getFooter(e);null==t||t.show()}}var s=o(228);function u(e){const t=e.layout,o=t.widgets.findIndex(((e,t,o)=>e.hasClass("jp-Cell-inputWrapper")));if(-1===o)return void console.error("Could not find the correct element.");const r=new d;t.insertWidget(o+1,r),r.hide()}class h extends s.NotebookPanel.ContentFactory{createCodeCell(e){const t=super.createCodeCell(e);return t.ready.then((()=>{u(t)})),t}createMarkdownCell(e){const t=super.createMarkdownCell(e);return t.ready.then((()=>{u(t)})),t}createRawCell(e){const t=super.createRawCell(e);return t.ready.then((()=>{u(t)})),t}}}}]);