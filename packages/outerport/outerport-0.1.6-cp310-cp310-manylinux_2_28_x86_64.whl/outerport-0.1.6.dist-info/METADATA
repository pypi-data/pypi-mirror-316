Metadata-Version: 2.1
Name: outerport
Version: 0.1.6
Summary: Model deployment and caching service
Author-email: Towaki Takikawa <tovacinni@gmail.com>, Allen Wang <allen.houze.wang@gmail.com>
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: boto3>=1.35.44
Requires-Dist: grpcio>=1.68.1
Requires-Dist: numpy>=1.9.2
Requires-Dist: protobuf>=5.27.2
Requires-Dist: pydantic>=2.9.2
Requires-Dist: torch>=2.4.0
Requires-Dist: tqdm>=4.66.5
Requires-Dist: xxhash>=3.5.0
Requires-Dist: accelerate>=1.2.0
Requires-Dist: transformers>=4.47.1
Requires-Dist: diffusers>=0.31.0
Requires-Dist: sentencepiece>=0.2.0

# outerport

Push, pull and cache models from remote registries with fast download.

## Installation

Install c++ dependencies:
```
sudo apt-get update
sudo apt-get install clang
sudo apt-get install libstdc++6
```

## Setting up the development environment

To install uv:
```
# On macOS and Linux.
$ curl -LsSf https://astral.sh/uv/install.sh | sh
```

To install the dependencies and build the package, run:
```
uv sync
```

To run scripts, run:
```
uv run <path_to_script>
```

To add packages, run:
```
uv add <package_name> [--dev for dev dependencies]
```

To create a Jupyter notebook kernel run:
```
uv run ipython kernel install --user --name=outerport
uv run --with jupyter jupyter lab
```
Then restart VSCode and you should find the kernel.
