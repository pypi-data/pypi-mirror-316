# coding: utf-8

"""
    Equinix Fabric API v4

    Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br> </br> <b>Integrations (SDKs, Tools) links:</b> </br> <a href=\"https://deploy.equinix.com/labs/fabric-java\\\">Fabric Java SDK</a> </br> <a href=\"https://deploy.equinix.com/labs/equinix-sdk-go\\\">Fabric Go SDK</a> </br> <a href=\"https://deploy.equinix.com/labs/equinix-sdk-python\\\">Fabric Python SDK</a> </br> <a href=\"https://deploy.equinix.com/labs/terraform-provider-equinix\\\">Equinix Terraform Provider</a> </br> <a href=\"https://deploy.equinix.com/labs/terraform-equinix-fabric\\\">Fabric Terraform Modules</a> </br> <a href=\"https://deploy.equinix.com/labs/pulumi-provider-equinix/\">Equinix Pulumi Provider</a> </br>

    The version of the OpenAPI document: 4.18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from equinix.services.fabricv4.api.ports_api import PortsApi


class TestPortsApi(unittest.TestCase):
    """PortsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PortsApi()

    def tearDown(self) -> None:
        pass

    def test_add_to_lag(self) -> None:
        """Test case for add_to_lag

        Add to Lag
        """
        pass

    def test_create_bulk_port(self) -> None:
        """Test case for create_bulk_port

        Create Port
        """
        pass

    def test_create_port(self) -> None:
        """Test case for create_port

        Create Port
        """
        pass

    def test_delete_port(self) -> None:
        """Test case for delete_port

        Delete a single port
        """
        pass

    def test_get_port_by_uuid(self) -> None:
        """Test case for get_port_by_uuid

        Get Port by uuid
        """
        pass

    def test_get_ports(self) -> None:
        """Test case for get_ports

        Get All Ports
        """
        pass

    def test_get_vlans(self) -> None:
        """Test case for get_vlans

        Get Vlans
        """
        pass

    def test_search_ports(self) -> None:
        """Test case for search_ports

        Search ports
        """
        pass


if __name__ == '__main__':
    unittest.main()
